// Title: How to use Fast-RTP communication function
#contents

※[[ROS2通信機能>/ja/node/6580]]がインストール済みの場合、Fast-RTPs通信機能も利用可能になっているため以下の手順は不要です。

C++版のみの対応です。

** Windows
*** Fast-RTPsのインストール
以下のサイトからインストーラーをダウンロードしてインストールしてください。

- https://www.eprosima.com/index.php/products-all/eprosima-fast-rtps

*** OpenRTM-aistのビルド

CMake実行時に''FASTRTPS_ENABLE''のオプションをONにします。

 cmake -DOMNI_VERSION=42  -DOMNI_MINOR=3 -DOMNITHREAD_VERSION=41 -DORB_ROOT=C:/workspace/omniORB-4.2.3-win64-vc141 -DCORBA=omniORB -G "Visual Studio 15 2017 Win64" -DFASTRTPS_ENABLE=ON ..

その他の手順は通常と同じです。

-  [[OpenRTM-aistのビルド手順>/ja/node/6339]]

適当な場所にインストールしてください。

インストールするディレクトリは''CMAKE_INSTALL_PREFIX''のオプションで設定します。

 cmake .. -DCMAKE_INSTALL_PREFIX=C:/workspace/OpenRTM-aist/build_omni/install
 cmake --build . --config Release --target install

*** 動作確認

''{インストールしたパス}\2.0.0\Components\C++\Examples\vc141''のサンプルコンポーネントを実行します。

以下の内容のrtc.confを作成してください。


 manager.modules.load_path: {インストールしたパス}\\2.0.0\\ext\\transport
 manager.modules.preload: FastRTPSTransport.dll
 manager.components.preconnect: ConsoleOut0.in?interface_type=fast-rtps, ConsoleIn0.out?interface_type=fast-rtps
 manager.components.preactivation: ConsoleOut0, ConsoleIn0

まず''FastRTPSTransport.dll''のロードが必要になります。
この設定は''manager.modules.preload''のオプションで設定できます。

次にコネクタ生成時にインターフェース型を''fast-rtps''に設定する必要があります。
コネクタの生成は''manager.components.preconnect''オプションにより設定します。
この例では''ConsoleOut0''コンポーネントの''in''のポート、''ConsoleIn0''コンポーネントの''out''のポートにそれぞれコネクタを生成しています。

''ConsoleInComp.exe''、''ConsoleOutComp.exe''を実行すると通信ができるようになります。

** Ubuntu
執筆中