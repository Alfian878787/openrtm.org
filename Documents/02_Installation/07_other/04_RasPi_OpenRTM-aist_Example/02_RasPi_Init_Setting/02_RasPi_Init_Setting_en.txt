// Title: Initial setting of Raspberry Pi
// -*- pukiwiki-edit -*-
// * Raspberry Pi の初期設定

#contents

** (G)Launch Raspberry Pi
//** Raspberry Pi の起動

Please connect HDMI monitor, keyboard, network to Raspberry Pi.
//Raspberry Pi に HDMIモニター、キーボード、ネットワークを接続してください。

After inserting the SD card and turning on the power to Raspberry Pi for the first time, the following setting screen (raspi-config) is displayed after the display screen of various drivers is displayed.
//SDカードを挿入し Raspberry Pi に始めて電源を投入すると、各種ドライバの読み込み画面が表示された後、以下の設定画面 (raspi-config) が表示されます｡

Note that raspi-config will not be displayed when operating from the PiRT-Unit serial console described below.
You can initialize by logging in with the following user name and password and executing the raspi-config command.
//なお、後述の PiRT-Unit のシリアルコンソールから操作する場合、raspi-config は表示されません。
//以下のユーザー名、パスワードでログインして raspi-config コマンドを実行することで初期設定を行うことができます。

- ''ID' : pi
- ''Password'' : raspberry

 Debian GNU/Linux 7.0 rtunit0 ttyAMA0
 
 rtunit0 login: pi
 Password:
 Last login: Sat Feb  9 03:40:44 UTC 2013 on ttyAMA0
 Linux rtunit0 3.6.11+ #371 PREEMPT Thu Feb 7 16:31:35 GMT 2013 armv6l
 
 The programs included with the Debian GNU/Linux system are free software;
 the exact distribution terms for each program are described in the
 individual files in /usr/share/doc/*/copyright.
 
 Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
 permitted by applicable law. 
 
 NOTICE: the software on this Raspberry Pi has not been fully configured. Please run 'sudo raspi-config'
 $ raspi-config
 
#ref(raspi-config2.png,center,nolink,80%)
CENTER:''Raspberry Pi initial setting screen''
//CENTER:''Raspberry Pi 初期設定画面''

*** (G)Setting items
//*** 設定項目

The contents of each item are shown below.
Please set each item as necessary.
//各項目の内容を以下に示します。
//必要に応じて各項目の設定を行ってください｡

//| ''[info]'' | 本ツールに関する情報を表示します｡ |
//| ''[expand_rootfs]'' | 使用する SDカードのパーティションを拡張します｡初期状態では、SDカードの先頭の2GBしか使用しないようになっています｡こちらの機能を使用することで全体を使用するように設定できます｡特に理由がなければ拡張を行ってください｡ |
//| ''[overscan]'' | 画面周囲に余白が必要な場合に設定します｡ |
//| ''[configure_keyboard]'' | 使用するキーボードの配列を設定します｡一般的な日本語キーボードを使用する場合は、[Generic 105-key (Intl) PC] → [Japanese] → [Japanese - Japanese(OADG109A)]を選択後、使用したいキー配列をしてください｡ |
//| ''[change_pass]'' | 初期設定ユーザー ｢pi｣ のパスワードを変更します｡ 利用者のわかりやすいパスワードに変更してください｡ |
//| ''[change_locale]'' | ロケール設定を行います｡必要に応じて [ja_JP.ECU-JP ECU-JP] などに設定してください｡|
//| ''[change-timezone]' | タイムゾーンの設定を行います｡日本国内で使用する場合は [Asia]-[Tokyo] を設定してください｡|
//| ''[memory_split]'' | 付属の GPU へのメモリー配分を指定します｡特に問題がない場合は、初期設定のままで構いません｡|
//| ''[ssh]'' | SSH 接続を有効にしたい場合には [Enable] に設定してください｡|
//| ''[boot_behaviour]'' | 起動時に X Windows のデスクトップを自動起動させた場合には [Yes] を設定してください｡|
//| ''[update]'' | 設定プログラム(raspi-config)自身のアップデートを行います｡|
| ''1 Expand Filesystem'' | Extend the partition of the SD card to be used.In the initial state, since you are not using the whole SD card, please extend it unless there is a particular reason. |
| ''2 Change User Password'' | Change the password of the initial setting user "pi" Please change to the user's easy-to-understand password. |
| ''3 Enable Boot to Desktop/Scratch'' | It is the setting of the screen at the time of starting, and the default is the console use. Set it if you want to change to GUI usage. |
| ''4 Internationalisation Options'' |"Locale", "Time zone", "Keyboard layout" settings. |
|I1 Change Locale|Set the locale, please set the keyboard layout to [ja_JP.ECU-JP ECU-JP] etc. If necessary, installation of Japanese fonts seems to be necessary.|
|I2 Change Timezone|Set the time zone When using in Japan, set [Asia]-[Tokyo].|
|I3 Change Keyboard Layout Set the keyboard layout to match your keyboard|Make keyboard settings. Please set it as Japanese keyboard etc. as necessary.|
| ''5 Enable Camera'' |Please set it when camera module is connected.|
| ''6 Add to Rastrack'' |Registering with Rastrack|
| ''7 Overclock'' |Overclocking|
| ''8 Advanced Options'' |Other options. We will only cover items necessary for PiRT-Unit environment here.|
|A6 SPI|To use SPI, set it to Enable. (Disable by default)|
|A7 I2C|To use I2C, set it to Enable. (Disable by default)|
| ''9 About raspi-config'' | Information about this tool is displayed. |
//| ''1 Expand Filesystem'' | 使用する SD カードのパーティションを拡張します｡初期状態では、SD カードの全体を使用していないので、特に理由がなければ拡張を行ってください｡ |
//| ''2 Change User Password'' | 初期設定ユーザー ｢pi｣ のパスワードを変更します｡ 利用者のわかりやすいパスワードに変更してください｡ |
//| ''3 Enable Boot to Desktop/Scratch'' | 起動時の画面の設定で、デフォルトはコンソール利用となっています。GUI 利用に変更したい場合には設定します。 |
//| ''4 Internationalisation Options'' |「ロケール」、「タイムゾーン」、「キーボード配列」の設定です。 |
//|I1 Change Locale|ロケール設定を行います｡キーボード配列は必要に応じて [ja_JP.ECU-JP ECU-JP] などに設定してください｡　その際は日本語フォントのインストールが必要となるようです。|
//|I2 Change Timezone|タイムゾーンの設定を行います｡日本国内で使用する場合は [Asia]-[Tokyo] を設定してください｡|
//|I3 Change Keyboard Layout Set the keyboard layout to match your keyboard|キーボードの設定を行います。必要に応じて日本語キーボード等に設定して下さい。|
//| ''5 Enable Camera'' |カメラモジュールを接続している場合に設定してください｡|
//| ''6 Add to Rastrack'' |Rastrack への登録|
//| ''7 Overclock'' |オーバークロック|
//| ''8 Advanced Options'' |その他のオプション。ここでは PiRT-Unit の環境で必要な項目のみ取り上げます。|
//|A6 SPI|SPIを利用する場合は、Enable に設定します。（デフォルトはDisable）|
//|A7 I2C|I2Cを利用する場合は、Enable に設定します。（デフォルトはDisable）|
//| ''9 About raspi-config'' | 本ツールに関する情報を表示します｡ |

After setting the above items, please select [Finish] with [Tab] key and execute.
Raspberry Pi main unit restarts, various settings become effective.
//上記の各項目を設定した後は、[Tab] キーにて [Finish] を選択して実行してください。
//Raspberry Pi 本体が再起動し、各種設定が有効となります。

After rebooting, wait for command input and execute "startx", the Raspbian desktop screen will be displayed.
//再起動後、コマンド入力待ち状態で、｢startx｣を実行すると Raspbian のデスクトップ画面が表示されます｡

#ref(raspberry_xwindow.png,center)
CENTER: ''Raspbian desktop screen''
//CENTER:''Raspbian デスクトップ画面''

//必要に応じて、ターミナル画面から root のパスワードを設定してください｡
//
// $ sudo sh
// # passwd

To terminate, please stop using the following command, then unplug the power from the main unit.
//終了する場合は、以下のコマンドで停止した後、本体から電源を抜いてください｡

 $ sudo halt

** (G)Wireless LAN settings
//** 無線LAN の設定

By inserting and setting a wireless LAN dongle in Raspberry Pi 's USB, you can wirelessize Raspberry Pi.
It is convenient when installing it in a mobile robot.
//Raspberry Pi の USB に無線LANドングルを挿入し設定することで、Raspberry Pi を無線化できます。
//移動ロボットなどに搭載する際には便利です。

*** (G)edit/etc/network/interfaces
//*** /etc/network/interfaces の編集

First edit/etc/network/interfaces as follows.
//まず、/etc/network/interfaces を以下のように編集します。

 $ sudo vi /etc/network/interfaces

Rewrite the following two places.
//以下の2か所を書き換えます。

 iface wlan0 inet manual
         ↓
 iface wlan0 inet dhcp

 wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
                      ↓
 wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

*** (G)Edit /etc/wpa_supplicant/wpa_supplicant.conf
//*** /etc/wpa_supplicant/wpa_supplicant.conf の編集

Next, register the ESSID and key of the wireless LAN.
//次に、無線LANの ESSID とキーを登録します。

 $ sudo bash
 # cd /etc/wpa_supplicant
 # wpa_passphrase ESSID pass >> wpa_supplicant.conf

Enter the ESSID of the wireless LAN for SSID and the wireless LAN key for pass. Be careful to use '' >> '' (append) instead of ''> '' when redirecting.
I think that the result is as follows.
//SSID には無線LANの ESSID、pass には無線LANのキーを入力します。リダイレクトの際、''>'' ではなく ''>>'' (追記)を使用するよう注意してください。
//結果は以下のようになっていると思います。

 ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
 update_config=1
 network={
         ssid="OpenRTM"
         #psk="4332221111"
         psk=142914b76be167767055ff945898baaaf83c42b3ad3b99afb0ae531e8fb15e5e
 }

Depending on the wireless LAN access point settings, additional configuration may be necessary.
An example is shown below.
//無線LAN アクセスポイントの設定によっては、追加の設定が必要になるかもしれません。
//以下に、一例を示します。

 ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
 update_config=1
 network={
         ssid="OpenRTM"
         proto=WPA2
         key_mgmt=WPA-PSK
         pairwise=TKIP CCMP
         group=TKIP CCMP
         #psk="4332221111"
         psk=142914b76be167767055ff945898baaaf83c42b3ad3b99afb0ae531e8fb15e5e
 }

Finally, initialize the interface.
//最後に、インターフェースを初期化します。

 # ifdown wlan0
 # ifup wlan0
 Internet Systems Consortium DHCP Client 4.2.2
 Copyright 2004-2011 Internet Systems Consortium.
 All rights reserved.
 For info, please visit https://www.isc.org/software/dhcp/
  : Omission
 DHCPREQUEST on wlan0 to 255.255.255.255 port 67
 DHCPOFFER from 192.168.11.1
 DHCPACK from 192.168.11.1
 bound to 192.168.11.26 -- renewal in 34810 seconds.

If you can not connect to the wireless LAN here, please review the settings in /etc/network/interfaces, /etc/wpa_supplicant/wpa_supplicant.conf.
//ここで、無線LAN に接続できない場合、/etc/network/interfaces, /etc/wpa_supplicant/wpa_supplicant.conf の設定を見直してください。
 
 # ifconfig wlan0
 wlan0     Link encap:Ethernet  HWaddr XX:XX:XX:XX:XX:XX
           inet addr:192.168.11.26  Bcast:192.168.11.255  Mask:255.255.255.0
           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
           RX packets:1218 errors:0 dropped:0 overruns:0 frame:0
           TX packets:21 errors:0 dropped:0 overruns:0 carrier:0
           collisions:0 txqueuelen:1000
           RX bytes:250608 (244.7 KiB)  TX bytes:4506 (4.4 KiB)

Illegally, IP address was assigned to wireless LAN wlan0.
無事、無線LAN wlan0 に IPアドレスが割り振られました。

** (G)Remotely connect with host name
//** ホスト名でリモート接続する

When you operate Raspberry Pi with remote login with ssh, if you do not allocate a fixed IP address, you usually need to consult the Raspberry Pi's IP address in the console and connect.
//Raspberry Pi に ssh でリモートログインで操作する場合、固定IPアドレスを割り振っていなければ、通常 Raspberry Pi の IPアドレスをコンソールで調べて接続する必要があります。

So install the service called avahi compatible with Bonjour.
Bonjour is a service to automatically search and use services on the network advocated by Apple.
If you use avahi, you can also access Raspberry Pi allocating IP address by DHCP by host name.
//そこで Bonjour互換の avahi というサービスをインストールします。
//Bonjour は Apple が提唱するネットワーク上のサービスを自動的に検索して利用できるようにするためのサービスです。
//avahi を使うと、DHCP で IPアドレスを割り振っている Raspberry Pi に対してもホスト名でアクセスすることができるようになります。

*** (G)Setting the host name
//*** ホスト名の設定

Select and set a host name that does not conflict with other host names.
//他のホスト名と衝突しないホスト名を選び設定します。

 $ sudo vi /etc/hostname

Write the host name in /etc/hostname in the first line. The initial value is raspberrypi.
In addition, rewrite the portion of 127.0.1.1 raspberrypi in /etc/hosts to the host name you decided above.
///etc/hostname に1行目にホスト名を記載します。初期値は raspberrypi となっています。
//さらに、/etc/hosts の 127.0.1.1 raspberrypi となっている部分を上で決めた自分のホスト名に書き換えます。

 $ sudo vi /etc/hosts

*** (G)Installation of avahi-daemon
//*** avahi-daemon のインストール

Install the avahi daemon with the following command.
//以下のコマンドで avahi デーモンをインストールします。

 $ sudo apt-get update
 $ sudo apt-get install avahi-daemon

I will try pinging my host. Use the host name followed by .local.
//自ホストに対してping を打ってみます。ホスト名の後に .local を付けた名前を使います。

 $ ping myhost.local

If ping is returned in this way, avahi is almost correctly set.
//これで ping が返ってくれば、avahi がほぼ正しく設定されていることになります。

*** (G)Installing Bonjour (Windows only)
//*** Bonjour のインストール (Windowsのみ)

In order to access RaspberryPi with avahi set from PC, avahi or Bonjour must also be installed on the PC side.
//PC から avahi が設定された RaspberryPi にアクセスするためには、PC側にも avahi か Bonjour がインストールされている必要があります。

On Linux, you can use it by installing avahi-daemon like RaspberryPi. Also Bonjour is installed by default on Mac, so you do not need to do anything in particular.
//Linux では、RaspberryPi と同様に avahi-daemon をインストールすれば使用できます。また、Mac はデフォルトで Bonjour がインストールされているので、特に何もする必要がありません。

On Windows, Bonjour is not installed by default.
The easiest way to install Bonjour is to install [[iTunes:http://www.apple.com/jp/itunes/download/]].
//Windows ではデフォルトでは Bonjour はインストールされていません。
//最も簡単に Bonjour を導入する方法は [[iTunes:http://www.apple.com/jp/itunes/download/]] をインストールすることです。

-  [[iTunes Download:http://www.apple.com/jp/itunes/download/]]

If you really do not want to install iTunes, you can also extract BonjourSetup.exe by unpacking the downloaded iTunesSetup.exe in an archiver application or the like.
//どうしても iTunes をインストールしたくない場合は、アーカイバアプリケーションなどで、ダウンロードした iTunesSetup.exe を展開すると BonjourSetup.exe を抽出することもできます。

Bonjour is also included in the following Apple Bonjour printing service. (The version seems to be slightly older than what is shipped with iTunes.)
//また、以下の Apple Bonjour 印刷サービスにも Bonjour が同梱されています。(iTunesに同梱されているものよりバージョンが若干古いようです。)

- [[Apple Bonjour:http://www.apple.com/jp/support/bonjour/]]
-- [[Bonjour printing service (v2.0.2.0):http://support.apple.com/kb/DL999]]

Currently Applie does not distribute Bonjour for Windows alone, but there are also some sites redistributing things that were once distributed. (However, it seems that you can get only the old version.)
Below are Bonjour download sites other than Apple site. Please use at your own risk.
//現在 Applie では Bonjour for Windows 単体としては配布は行なっていませんが、かつて配布していたものを再配布しているサイトも幾つかあります。(ただし、古いバージョンしか入手できないようです。)
//以下は Appleサイト以外の Bonjour ダウンロードサイトです。自己責任でご利用ください。

- [[BonjourSetup.exe (v1.0.6.2):http://www.download3k.com/Install-Bonjour.html]]
- [[Bonjour64Setup.exe (v1.0.6.2):http://download.techworld.com/760/apple-bonjour-for-windows-106-64-bit/]]
- [[Apple Bonjour SDK (Login to Apple developer is required):https://developer.apple.com/downloads/index.action?q=Bonjour%20SDK%20for%20Windows]]

**** (G)Bonjour does not work well
//**** Bonjour がうまく機能しない場合

Bonjour may not work well if the firewall is running.
In that case, please open UDP port 5353 or turn off the firewall.
//ファイヤウォールが動作している場合、Bonjour がうまく機能しないことがあります。
//その場合、UDPポート5353を開放するかファイヤウォールを OFF にしてください。

- [[Bonjour for Windows does not work due to firewall settings:http://support.apple.com/kb/TS2235?Viewlocale=ja_JP]]
//- [[ファイアウォールの設定が原因で Bonjour for Windows が動作しない:http://support.apple.com/kb/TS2235?viewlocale=ja_JP]]

*** (G)Installation of TeraTerm
//*** TeraTerm のインストール

In order to login via ssh from Windows to RaspberryPi, you need to install the ssh client.
There are many clients available on Windows, but here we introduce Tera Term.
//Windows から RaspberryPi に ssh 経由でログインするためには、ssh クライアントをインストールする必要があります。
//Windows で利用可能なクライアントは多数ありますが、ここでは Tera Term を紹介します。

- [[Tera Term:http://sourceforge.jp/projects/ttssh2/]]

#ref(teraterm_connect.png,center,80%)
CENTER: ''Connection via TeraTerm''
//CENTER: ''TeraTermによる接続''

After installing TeraTerm, when starting up, a connection dialog will appear. Enter the host name+''.Local'' set earlier in the "Host" text box and press OK.
If the password has not been changed,
//TeraTerm をインストール後、起動すると接続ダイアログが現れるので、先ほど設定したホスト名+''.local'' を「ホスト」のテキストボックスに入力しOKを押します。
//パスワードが変更されていなければ、

- ID: pi
- Password: raspberry

You can login with.
In addition, Linux and Mac open a terminal window
 $ ssh pi@myhost.local
Connect as follows.
//でログインできます。
//なお、Linux や Mac はターミナルウインドウを開いて
// $ ssh pi@myhost.local
//のようにして接続します。
