// Title: Preparation of SD card
// -*- pukiwiki-edit -*-
#contents

** (G)Introduction
//** はじめに

This section explains installation of the execution environment for running RTC for Raspberry Pi (hereinafter referred to as RPI RTC).
//ここでは、Raspberry Pi用 RTC(以下、RPI RTC)を動作させるための実行環境のインストールについて説明します。

The following installation procedure assumes Windows environment.
If you are using a non-Windows environment please refer to the following site etc.
//なお、以下のインストール手順は、Windows 環境を前提としています｡
//Windows 環境以外をご使用の方は以下のサイトなどをご参照ください｡

- http://elinux.org/RPi_Easy_SD_Card_Setup

Here, we download the OS image from the Raspberry Pi official site and explain about various setups.
The rough procedure to make OpenRTM available on Raspberry Pi is as follows.
//ここでは、Raspberry Pi オフィシャルサイトから OSイメージをダウンロードし、各種セットアップについて説明します。
//Raspberry Pi上で OpenRTM を使用できるようにするまでの大まかな手順は以下の通りです。

- Write the OS image to the SD card
- Basic Setup of the OS
- Installing OpenRTM-aist
- Component execution test
//- SDカードに OSイメージを書き込む
//- OSの基本的なセットアップ
//- OpenRTM-aist のインストール
//- コンポーネントの実行テスト

In addition, since OpenRTM - aist installation and image where Kobuki component has already been installed are prepared here, the following procedure can be skipped.
//なお、OpenRTM-aist のインストールや、Kobuki コンポーネントがすでにインストールされたイメージをこちらに用意していますので、以下の手順はスキップすることができます。

- [[OpenRTM-aist installation]]
- [[Installing Kobuki components]]
- [[Setup for PiRT-Unit]]
//- [[OpenRTM-aist のインストール]]
//- [[Kobuki コンポーネントのインストール]]
//- [[PiRT-Unit用セットアップ]]

** (G)Capacity of SD card
//** SDカードの容量

The SD card you need is at least ''2GB'', but ''4GB or more is required'' for actual use. Be sure to prepare an SD card of 4GB or more.
//使用する SDカードは最低 ''2GB'' 必要ですが、実際の使用では ''4GB以上が必要'' になります。必ず4GB以上の SDカードを用意してください。

** (G)Image download
//** イメージのダウンロード

Download OS Raspbian "wheezy" for Raspberry Pi from the following site.
Raspbian is a Debian-based Linux distribution for RaspberryPi.
//以下のサイトから、Raspberry Pi用 OS Raspbian “wheezy”をダウンロードします｡
//Raspbian は Debian ベースのRaspberryPi用 Linux ディストリビューションです。
//wheezyには armhf と armel の二つのタイプがありますが、''armhf'' を使用してください。

- Raspbian Wheezy: http://www.raspberrypi.org/downloads

#ref(raspbian_download_site2.png, 80%, center)
CENTER: ''Download Raspbian''
//CENTER:''Raspbian のダウンロード''

Please unzip the downloaded file YYYY-MM-DD-wheezy-raspbian.zip.
YYYY-MM-DD-wheezy-raspbian.img file of 2GB size should be expanded.
//ダウンロードしたファイル YYYY-MM-DD-wheezy-raspbian.zip を展開してください。
//YYYY-MM-DD-wheezy-raspbian.img という2GB位のファイルが展開されているはずです。

 $ ls -al 
 total 4752840
 drwxr-xr-x  4 n-ando  staff         136  5 18 13:30 .
 drwxr-xr-x  9 n-ando  staff         306  5 18 13:30 ..
 -rw-r--r--  1 n-ando  staff  1939865600  2  9 12:44 2013-02-09-wheezy-raspbian.img
 -rwxr-xr-x  1 n-ando  staff   493587826  5  7 21:08 2013-02-09-wheezy-raspbian.zip

If it can not be deployed successfully, the download may fail and the file may be broken. Please delete the corrupted file and try downloading again.
//うまく展開できない場合、ダウンロードに失敗しファイルが壊れている可能性があります。壊れたファイルを削除して、再度ダウンロードしてみてください。

** (G)Write image
//** イメージの書き込み

The expanded yyyy-mm-dd-hweezy-raspbian.img is called an image file, and the state of the disk started by Raspbian is extracted byte by byte from the beginning to the end of the disk.
&color(red){You can not use this file simply by copying it to SD card! ! };
//展開された yyyy-mm-dd-hweezy-raspbian.img はイメージファイルといい、Raspbian が起動するディスクの状態をディスクの最初から最後まで1バイトづつ抜き出したものです。
//&color(red){このファイルをSDカードに単純にコピーしても使用することはできません！！};

Please write it to the SD card as described below.
//以下に説明する方法で SDカードに書き込んでください。

*** (G)Writing images (Windows)
//*** イメージの書き込み (Windows)

In Windows, you can write images by using the tool called Win32 DiskImager.
Download the image data writing tool Win32DiskImager binary from the following site.
//Windows では Win32DiskImager というツールを使用することでイメージの書き込みができます。
//以下のサイトからイメージデータ書き込みツール Win32DiskImager のバイナリをダウンロードします｡

- Win32DiskImager: http://sourceforge.jp/projects/sfnet_win32diskimager/

#ref(win32diskimager_site.png,80%,center)
CENTER: ''Download Win32 DiskImager''
//CENTER:''Win32DiskImager のダウンロード''

Extract the downloaded file (win32diskimager-vX.X-binary.zip).
//ダウンロードしたファイル (win32diskimager-vX.X-binary.zip ) を解凍します｡

&color(red){* Because Win32 DiskImager does not support double-byte characters, YYYY-MM-DD-wheezy-raspbian.zip decompresses to halfway pathname where double-byte characters and spaces are not included Please give me.};
//&color(red){※Win32DiskImager は、2バイト文字に対応していないため、YYYY-MM-DD-wheezy-raspbian.zip は途中のパス名に全角文字や空白が含まれていない場所に解凍してください｡};

Insert the SD card used by Raspberry Pi into the PC and start Win32 DiskImager.
//Raspberry Pi で使用する SDカードをPCに挿入し、Win32DiskImager を起動します｡

&color(red){* Since SD card needs to be recognized as a drive, format it in FAT32 format beforehand};
//&color(red){※SDカードはドライブとして認識されている必要があるので、事前に FAT32 形式でフォーマットしておいてください｡};

Specify the drive of the SD card in Raspbian image file (YYYY-MM-DD-wheezy-raspbian.img), "Drive" which decompressed to "Image File" and click "Write" button.
//｢Image File｣に解凍したRaspbian のイメージファイル (YYYY-MM-DD-wheezy-raspbian.img)、｢Drive｣に SDカードのドライブを指定し、｢Write｣ ボタンをクリックします｡

#ref(win32diskimager.png,center,nolink)
CENTER: ''Write image data''
//CENTER:''イメージデータの書き込み''

The preparation of the SD card is now complete.
When writing is completed, install the SD card in the Raspberry Pi and turn on the power.
//以上で SDカードの準備は終了です｡
//書き込みが終了したら、SDカードを Raspberry Pi に設置し、電源を投入します。

*** (G)Writing images (Linux)
//*** イメージの書き込み (Linux)

On Linux, you can read and write images using the dd command.
The dd command is installed by default on most UNIX based operating systems.
//Linux では ddコマンドを利用してイメージの読み書きができます。
//ddコマンドは UNIX系の OSなら大抵デフォルトでインストールされています。

After inserting the SD card, check the kernel message with the dmesg command.
//SDカードを差し込んでから、 dmesg コマンドでカーネルのメッセージを確認します。
 $ dmesg
   : Omission
 [333478.822170] sd 3:0:0:0: [sdb] Assuming drive cache: write through
 [333478.822174]  sdb: sdb1 sdb2
 [333478.839563] sd 3:0:0:0: [sdb] Assuming drive cache: write through
 [333478.839567] sd 3:0:0:0: [sdb] Attached SCSI removable disk
 [333479.094873] EXT4-fs (sdb2): mounted filesystem with ordered data mode
 [333527.658195] usb 1-1: USB disconnect, address 2

From this message, check the device name of the SD card. In this example sdb seems to be the device name of the SD card. Let's look under/dev/.
//このメッセージから SDカードのデバイス名を確認します。この例では sdb が SDカードのデバイス名のようです。/dev/ の下を見てみます。

 ls -al /dev/sd*
 brw-rw---- 1 root disk 8,  0 May  7 17:28 /dev/sda
 brw-rw---- 1 root disk 8,  1 May  7 17:28 /dev/sda1
 brw-rw---- 1 root disk 8,  2 May  7 17:28 /dev/sda2
 brw-rw---- 1 root disk 8,  5 May  7 17:28 /dev/sda5
 brw-rw---- 1 root disk 8, 16 May 18 14:19 /dev/sdb
 brw-rw---- 1 root disk 8, 17 May 18 14:19 /dev/sdb1
 brw-rw---- 1 root disk 8, 32 May 18 14:19 /dev/sdc

Since sda is mostly a system disk, do not touch ''absolute''.
//sda は大抵システムディスクなので、''絶対''に触ってはいけません。

Depending on the distribution, if there is a mountable file system in the SD card, there seem to be a case where it is mounted automatically.
In that case, unmount the disk. (In Ubuntu, a folder of the file system mounted on the desktop appears, please remove it by right click, otherwise unmount with the umount command.)
//ディストリビューションによっては、SDカード内にマウント可能なファイルシステムがある場合自動でマウントするケースもあるようです。
//その場合、ディスクをアンマウントしてください。(Ubuntuではデスクトップにマウントしたファイルシステムのフォルダーが現れるので右クリックで取り外してください。それ以外は umount コマンドでアンマウントします。)

#ref(ubuntu_adcard_mount.png,50%,center)
CENTER: ''SD card mounted on Ubuntu (removable with right click menu)''
//CENTER: ''Ubuntu上でマウントされた SDカード(右クリックメニューで取り外すことができる)''

''dd if = Image file of = Device file of SD card bs = 1M'' Enter the command and execute it.
However, since writing to the device file requires administrator (root) privilege, please use sudo.
//''dd if=イメージファイル of=SDカードのデバイスファイル bs=1M'' のようにコマンドを入力し実行します。
//ただし、デバイスファイルへの書き込みは管理者(root)権限が必要ですので、sudo を使用してください。

 $ unzip  2013-02-09-wheezy-raspbian.zip
 Archive:  2013-02-09-wheezy-raspbian.zip
   inflating: 2013-02-09-wheezy-raspbian.img
 $ sudo dd if=2013-02-09-wheezy-raspbian.img of=/dev/sdb bs=1M
 1850+0 records in
 1850+0 records out
 1939865600 bytes (1.9 GB) copied, 201.543 s, 9.6 MB/s

During execution, you can check whether the writing is performed correctly by executing the iostat command on another terminal or the like.
(In the latest distribution, it may not be installed by default.debian / ubuntu allows you to use the iostat command with apt-get install sysstat.)
//実行中は別のターミナルなどで、iostat コマンドを実行して書き込みが正しく行われているかどうか見ることができます。
//(最近のディストリビューションではデフォルトでインストールされていないことがあります。debian/ubuntu では apt-get install sysstat で iostat コマンドが使えるようになります。)

 $ iostat -mx 1
  avg-cpu:  %user   %nice %system %iowait  %steal   %idle
            0.00    0.00    0.00   50.25    0.00   49.75
 
 Device:         rrqm/s   wrqm/s     r/s     w/s    rMB/s    wMB/s avgrq-sz avgqu-sz   await  svctm  %util
 sda               0.00     0.00    0.00    1.00     0.00     0.00     8.00     0.00    0.00   0.00   0.00
 sdb               0.00  1856.00    0.00   78.00     0.00     9.14   240.00   143.40 1855.85  12.82 100.00

Looking at the item of sdb, we can see that the writing speed of 9.14 MB/sec has come up.
If you have a speed of about 6 MB/sec for class 6 SD card and 10 MB/sec for class 10 SD card, you can think that it is being written without problem.
Depending on distribution, it may be mounted automatically when writing is finished. In that case, please unmount and then remove the SD card.
//sdb の項目を見ると 9.14MB/sの書き込み速度が出ていることがわかります。
//class 6 の SDカードなら 6MB/sec, class 10の SDカードなら 10MB/sec 程度の速度が出ていれば、問題なく書き込まれていると考えてよいでしょう。
//書き込みが終了すると、ディストリビューションによっては自動でマウントされる場合があります。その場合、アンマウントしてからSDカードを抜いてください。

*** (G)Writing images (Mac OS X)
//*** イメージの書き込み (Mac OS X)

Mac OS X also writes using the dd command like Linux.
However, on Mac, it is mounted automatically when you insert an SD card, you can not write to the SD card with the dd command while mounting, you need to unmount (remove from OS).
//Mac OS Xも Linux と同様 ddコマンドを利用して書き込みます。
//ただし、Mac では SDカードを挿入すると自動的にマウントされてしまい、マウント中は ddコマンドで SDカードに書き込むことができないので、アンマウント (OSから取り外す) する必要があります。

When inserting the SD card, an SD card icon will appear in the Finder as shown.
Please be careful not to push ''eject button'' as you intend to unmount.
//SDカードを差し込むと Finder に図のように SDカードのアイコンが現れます。
//アンマウントするつもりで''イジェクトボタンを押さないよう''気を付けてください。


#ref(sdcard_mac.png,center,80%)
CENTER: '' SD card mounted on Mac ''
//CENTER: ''Mac にマウントされた SDカード''

The volume name of the SD card is '' Untitled '' here. Remember the volume name.
When you enter the df command from the command prompt, the following message is displayed.
//SDカードのボリューム名はここでは ''Untitled'' です。ボリューム名を覚えておきます。
//コマンドプロンプトから df コマンドを入力すると以下のように表示されます。

 $ df -k
 Filesystem                        1024-blocks      Used Available Capacity   iused    ifree %iused  Mounted on
 /dev/disk0s2                        500000000 437664508  62079492    88% 109480125 15519873   88%   /
 devfs                                     194       194         0   100%       679        0  100%   /dev
 map -hosts                                  0         0         0   100%         0        0  100%   /net
 map auto_home                               0         0         0   100%         0        0  100%   /home
 /dev/disk1s1                            57288     18992     38296    34%       512        0  100%   /Volumes/Untitled

The lowest ''/Volumes/Untitled'' is the mount point of the SD card. Remember the device name of the leftmost SD card /dev/disk1s1.
Unmount this SD card. Use the command diskutil and enter ''diskutil umount <mount point>''.
// 一番下 ''/Volumes/Untitled'' とあるのが先ほどの SDカードのマウントポイントです。一番左の SDカードのデバイス名 /dev/disk1s1 を覚えておきます。
//このSDカードを一旦アンマウント します。diskutil というコマンドを使用し ''diskutil umount <マウントポイント>'' のように入力します。

 $ diskutil umount /Volumes/Untitled
 Volume (null) on disk1s1 unmounted
 $ df -k
 Filesystem                        1024-blocks      Used Available Capacity   iused    ifree %iused  Mounted on
 /dev/disk0s2                        500000000 437664716  62079284    88% 109480177 15519821   88%   /
 devfs                                     194       194         0   100%       679        0  100%   /dev
 map -hosts                                  0         0         0   100%         0        0  100%   /net
 map auto_home                               0         0         0   100%         0        0  100%   /home

You can see that /Volumes/Untitled disappears and the SD card is unmounted.
Then write the image using the dd command.
''dd if=image file of=/dev/rdisk1bs=1m''.
of=/dev/rdisk1 is the device name which takes the last ''s1'' of the device file /dev/disk1s1 that you remembered earlier and also appended ''r'' to disk before the device is.
//先ほどの /Volumes/Untitled が消えて、SDカードがアンマウントされていることがわかります。
//次にddコマンドを使用してイメージを書き込みます。
//''dd if=イメージファイル of=/dev/rdisk1 bs=1m'' のように入力します。
//of=/dev/rdisk1 は先ほど覚えたデバイスファイル /dev/disk1s1 のうち後ろの ''s1'' を取り、さらにdiskの前に raw deviceであることを示す ''r'' を付けたデバイス名です。

Since this command accesses the device file, it can not be executed unless it is an administrator (root). Execute as follows using sudo.
//このコマンドはデバイスファイルにアクセスするので管理者 (root) でなければ実行できません。sudoを使用して以下のように実行します。

 $ sudo dd if=2013-02-09-wheezy-raspbian.img of=/dev/rdisk1 bs=1m
 1850+0 records in
 1850+0 records out
 1939865600 bytes transferred in 302.377337 secs (6415380 bytes/sec)
 $

While writing, you can see if the writing is performed correctly by looking at "Disk operation" in "Activity monitor".
If you have a speed of about 6 MB / sec for class 6 SD card and 10 MB / sec for class 10 SD card, you can think that it is being written without problem.
//書き込み中は、「アクティビティモニタ」で「ディスクの動作」を見ることで書き込みが正しく行われているかどうかわかります。
//class 6 の SDカードなら 6MB/sec, class 10の SDカードなら 10MB/sec 程度の速度が出ていれば、問題なく書き込まれていると考えてよいでしょう。

When the writing is completed, it will automatically mount again, so press the eject button on the Finder this time to remove the SD card.
//書き込みが終了すると、自動的に再度マウントされますので、今度は Finder のイジェクトボタンを押して SDカードを抜きます。
