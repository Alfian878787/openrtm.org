This sample is bundled to the Java edition of OpenRTM-aist. Please note that
this sample is not bundled to the C++ edition and the Python edition. 

#contents
**Introduction and Screen shots
This is a sample of RT-Component which has the GUI screen. This sample
component starts up by running GUIIn component.


#br

#ref(GUIIn_example_en.png,center)
CENTER:''Example to run GUIIn(GUIIn)''
#br
#br


#ref(GUIIn_example_rtse_en.png,50%,center)

CENTER:''Example to run GUIIn(RTSystemEditor connection)''
#br

// Each port sends its input data, when you connect correspondent Ports and
// enable its check box next to its GUI element. (You may use RTSystemEditor for
// connection between Ports, Use other examples such as SeqIn to confirm its
// output data.)
Each Port transmits input data by turning on the check box on the GUI
element side after it connects between corresponding Port. (Please use
RTSystemEditor for the connection between Port.  Please use another sample
such as SeqIn for the confirmation of output data. )


#br
The relationship between each GUI element and the Port is as follow.
:Slider(Upper)| TimedLong type OutPort 
:Text box(Middle)|TimedString type OutPort 
:Spinner (Lower)|TimedDouble type OutPortt


**Execution of RT-Component
The value on the screen of SeqIn changes by operating the control (slider
and Spiner) on the screen of the GUIIn component. 

You can execute this sample with the following procedures.

--Start RTSystemEditor.
--Run GUIIn and SeqIn, then each sample component starts.The start of the
component is different depending on OS. Please start GUIIn.bat when you use
Windows and start GUIIn.sh when you use Linux.
--Both components are displayed on NameServiceView of RTSystemEditor. To add
a RTcomponent to the System Editor from the Name Service View into the
System Editor.
--Drag and drop between two ports to connect them.
--RTcomponents Activate



