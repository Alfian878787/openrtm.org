// Title: Tips
** JDK installation hints
The JDK installs either OpenJDK or OracleJDK. Here, we will show you how to install in the following environment.
//JDKは、OpenJDK と OracleJDK のいずれかをインストールします。ここでは下記環境へのインストール方法を紹介します。
- [[Ubuntu 14.04 >#ubuntu]]
- [[Debian 7.0 Wheezy >#debian7]] 
- [[Debian 6.0 Squeeze >#debian6]] 
- [[Fedora 20 >#fedora]]
&br;
&br;

*** Ubuntu 14.04&aname(ubuntu);
**** OpenJDK7
It can be installed with apt-get.
//apt-getでインストールできます。
 $ sudo apt-get install openjdk-7-jdk

Confirmation of JDK
//JDKの確認
 $ java -version
 java version "1.7.0_75"
 OpenJDK Runtime Environment (IcedTea 2.5.4) (7u75-2.5.4-1~trusty1)
 OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode)

Here, when the version is displayed for "1.6.0_xx", change it to use JDK 7. This switching is done with the update-alternatives command.
//ここでバージョンが、「1.6.0_xx」という用に表示されたら、JDK7 を使用するように変更します。この切替えは、update-alternatives コマンドで行います。
 $ sudo update-alternatives --config java
 alternative java (provides /usr/bin/java) has 2 choices.
// alternative java (/usr/bin/java を提供) には 2 個の選択肢があります。
   Option         path                                         priority      status
//   選択肢    　　パス                                          優先度  　　状態
 -------------------------------------------------------------------------------------
 * 0            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      auto mode
   1            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      manual mode
   2            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1051      manual mode
 Press Enter to keep the current selection [*], otherwise press the key of the choice: 2
// 現在の選択 [*] を保持するには Enter、さもなければ選択肢の番号のキーを押してください: 2
Since JDK 7 is used, specify the number "2". After this operation, check the JDK with java -version.
//JDK7 を使用するので、番号の「2」を指定します。この操作後、java -version でJDKを確認します。

**** oracleJDK7
Add the repository and install oracleJDK7.
//リポジトリを追加して、oracleJDK7をインストールします。
 $ sudo add-apt-repository ppa:webupd8team/java
 $ sudo apt-get update
 $ sudo apt-get install oracle-jdk7-installer

Confirmation of JDK
//JDKの確認
 $ java -version
 java version "1.7.0_76"
 Java(TM) SE Runtime Environment (build 1.7.0_76-b13)
 Java HotSpot(TM) 64-Bit Server VM (build 24.76-b04, mixed mode)

If you also have OpenJDK installed, you can check the selection status below.
//OpenJDKもインストールしている場合は、選択状況を下記で確認できます。
 $ update-alternatives --config java
 alternative java (provides /usr/bin/java) has 2 choices.
// alternative java (/usr/bin/java を提供) には 2 個の選択肢があります。
      Option         path                                         priority      status
//   選択肢   　　 パス                                          優先度  　　状態
 -------------------------------------------------------------------------------------
 * 0            /usr/lib/jvm/java-7-oracle/jre/bin/java          1072      auto mode
   1            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1071      manual mode
   2            /usr/lib/jvm/java-7-oracle/jre/bin/java          1072      manual mode
 Press Enter to keep the current selection [*], otherwise press the key of the choice:
// 現在の選択 [*] を保持するには Enter、さもなければ選択肢の番号のキーを押してください: 

&br;

*** Debian 7.0 Wheezy &aname(debian7);
**** OpenJDK7
For the procedure, refer to Ubuntu 14.04 above. It can be set by the same procedure.
//手順は上記の Ubuntu14.04 を参照して下さい。同じ手順で設定できます。

**** oracleJDK7 (Method using java-package: corresponding from Debian 7.0)
//**** oracleJDK7（java-packageを使った方法：Debian7.0から対応）

Follow the instructions on the right to install.
//右記の手順に従ってインストールします。
https://wiki.debian.org/JavaPackage

Add the following sentence to the end of /etc/apt/sources.list.
///etc/apt/sources.listの末尾に次の一文を追加します。
 deb http://http.debian.net/debian/ wheezy main contrib

Install the required java-package to install the JDK.
//JDKをインストールするために必要な java-package をインストールします。
 # apt-get update
 # apt-get install java-package

Download the JDK (here jdk-7u75-linux-x64.tar.gz) from the oracle site.
//oracleのサイトからJDK （ここではjdk-7u75-linux-x64.tar.gz） をダウンロードします。
&br;
http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html

Generate and install the deb package.
//debパッケージを生成してインストールします。
 $ make-jpkg jdk-7u75-linux-x64.tar.gz
 $ ls
 oracle-j2sdk1.7_1.7.0+update75_amd64.deb
 # dpkg -i oracle-j2sdk1.7_1.7.0+update75_amd64.deb

Select oracleJDK.
//oracleJDKを選択します。
 # update-alternatives --config java
 alternative java (provides /usr/bin/java) has 3 choices.
 Alternative java (provides /usr/bin/java) has 3 choices.
      Option         path                                         priority      status
//   選択肢    　　パス                                          優先度  　　状態
 -------------------------------------------------------------------------------------
   0            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      auto mode
   1            /usr/lib/jvm/j2sdk1.7-oracle/jre/bin/java        317       manual mode
   2            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      manual mode
 * 3            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1051      manual mode
 Press Enter to keep the current selection [*], otherwise press the number of the choice: 1
// 現在の選択 [*] を保持するには Enter、さもなければ選択肢の番号のキーを押してください: 1

Confirmation of JDK
//JDKの確認
 $ java -version
 java version "1.7.0_75"
 Java(TM) SE Runtime Environment (build 1.7.0_75-b13)
 Java HotSpot(TM) 64-Bit Server VM (build 24.75-b04, mixed mode)

*** Debian 6.0 Squeeze &aname(debian6);
**** OpenJDK7

Add the wheezy repository to the end of /etc/apt/sources.list.
///etc/apt/sources.list の最後にwheezyリポジトリを追加します。
 # vi /etc/apt/sources.list
 deb http://ftp.jp.debian.org/debian/ wheezy main

Since it was added only for the installation of openjdk 7, the priority is the sqeeze version, so create a local file in / etc / apt / apt.conf.d and write the following.
//openjdk7 のインストールのためだけに追加したので、優先されるのはsqeezeバージョンということで、/etc/apt/apt.conf.d にlocalファイルを新設して以下を記述します。
 # vi /etc/apt/apt.conf.d/local
 APT::Default-Release "squeeze";

On the other hand, the priority of the package included in wheezy is kept to a minimum. In the squeeze environment, we want to avoid having to upgrade major libraries unnecessarily. &br;
Create a wheezy file in /etc/apt/preferences.d and write the following.
//一方、wheezyに含まれるパッケージのプライオリティは最小にしておきます。squeeze環境で、主要なライブラリが不要にもアップグレードされてしまうことは避けたいためです。&br;
///etc/apt/preferences.d にwheezyファイルを新設し、以下を記述します。
 # vi /etc/apt/preferences.d/wheezy
 Package: *
 Pin: release n=wheezy
 Pin-Priority: 10

For priority, 100 is allocated to the package being installed, 500 is allocated to the package not installed, so specify a value smaller than 100.
//priorityは、インストールしているパッケージには100、インストールしていないパッケージには500が割り当てられるので、100より小さい値を指定しておきます。

 # apt-get update
 # apt-get install -t wheezy openjdk-7-jdk

Select OpenJDK 7.
//OpenJDK7を選択します。
 # update-alternatives --config java
 alternative java (provides /usr/bin/java) has 3 choices.
// alternative java (/usr/bin/java を提供) には 3 個の選択肢があります。
   Option         path                                         priority      status
//   選択肢    　　パス                                          優先度  　　状態
 -------------------------------------------------------------------------------------
 * 0            /usr/lib/jvm/java-6-openjdk/jre/bin/java         1061      auto mode
   1            /usr/bin/gij-4.7                                 1047      manual mode
   2            /usr/lib/jvm/java-6-openjdk/jre/bin/java         1061      manual mode
   3            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1051      manual mode
 Press Enter to keep the current selection [*], otherwise press the number of the choice: 3
// 現在の選択 [*] を保持するには Enter、さもなければ選択肢の番号のキーを押してください: 3

Confirmation of JDK
//JDKの確認
 # java -version
 java version "1.7.0_03"
 OpenJDK Runtime Environment (IcedTea7 2.1.7) (7u3-2.1.7-1)
 OpenJDK 64-Bit Server VM (build 22.0-b10, mixed mode)

''Reference site (external site):''
//''参考サイト（外部サイト）:''
- [[Install Openjdk7 on Debian Squeeze >http://serverfault.com/questions/465741/install-openjdk7-on-debian-squeeze]]
- [[Debian Administrator Handbook >http://debian-handbook.info/browse/ja-JP/stable/sect.apt-get.html]]

&br;

**** oracleJDK 7 (How to install with update-alternatives)
//**** oracleJDK7（update-alternatives でインストールする方法）

Debian 6.0 does not support java-package, so install it with update-alternatives.
//Debian6.0 では java-package がサポートされていないので、update-alternatives でインストールします。
&br;&br;

Download the JDK (here jdk-7u75-linux-x64.tar.gz) from the oracle site. &br;
//oracleのサイトからJDK （ここではjdk-7u75-linux-x64.tar.gz） をダウンロードします。&br;
http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
&br;

Unzip it and move the generated directory jdk1.7.0_75 to /usr/lib.
//解凍し、生成されたディレクトリjdk1.7.0_75を /usr/lib に移動させます。
 # tar xvzf jdk-7u75-linux-x64.tar.gz
 # mv jdk1.7.0_75 /usr/lib/jvm/jdk1.7.0-oracle

Install with the update-alternatives command. At this time, the priority is specified, but here it is 1.
//update-alternatives コマンドでインストールします。この時、優先度を指定しますが、ここでは１としています。
 # update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.7.0-oracle/bin/java" 1
 # update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.7.0-oracle/bin/javac" 1

Select oracleJDK.
//oracleJDKを選択します。
 # update-alternatives --config java
 There are four choices in alternative java (providing /usr/bin/java).
// alternative java (/usr/bin/java を提供) には 4 個の選択肢があります。
   Option         path                                         priority      status
//   選択肢    　　パス                                          優先度  　　状態
 -------------------------------------------------------------------------------------
   0            /usr/lib/jvm/java-6-openjdk/jre/bin/java         1061      auto mode
   1            /usr/bin/gij-4.7                                 1047      manual mode
   2            /usr/lib/jvm/java-6-openjdk/jre/bin/java         1061      manual mode
 * 3            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1051      manual mode
   4            /usr/lib/jvm/jdk1.7.0-oracle/bin/java            1         manual mode
 Press Enter to hold the current selection [*], otherwise press the number of the choice: 4
// 現在の選択 [*] を保持するには Enter、さもなければ選択肢の番号のキーを押してください: 4

Confirmation of JDK
//JDKの確認
 $ java -version
 java version "1.7.0_75"
 Java(TM) SE Runtime Environment (build 1.7.0_75-b13)
 Java HotSpot(TM) 64-Bit Server VM (build 24.75-b04, mixed mode)

&br;
''Reference site (external site):''
//''参考サイト（外部サイト）:''
- [[Install Oracle JDK on Debian Linux >http://astah.change-vision.com/ja/feature/install-linux-debian.html]]

&br;

*** Fedora 20 &aname(fedora);
**** OpenJDK7
It is already installed.
//既にインストールされています。
 $ java -version
 java version "1.7.0_75"
 OpenJDK Runtime Environment (fedora-2.5.4.2.fc20-x86_64 u75-b13)
 OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode)

**** oracleJDK7
Download the JDK (jdk-7u75-linux-x64.rpm in this case) from the oracle site. &br;
//oracleのサイトからJDK（ここではjdk-7u75-linux-x64.rpm）をダウンロードします。&br;
http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
&br;

Installation
//インストール
 # rpm -ivh jdk-7u75-linux-x64.rpm

Confirm installation destination
//インストール先の確認
 # ls -l /usr/java/
 lrwxrwxrwx. 1 root root   16  3月 17 10:47 default -> /usr/java/latest
 drwxr-xr-x. 8 root root 4096  3月 17 10:46 jdk1.7.0_75
 lrwxrwxrwx. 1 root root   21  3月 17 10:47 latest -> /usr/java/jdk1.7.0_75

Register oracleJDK to alternatives. At this time, if you use the /usr/java/latest path from the installation above, you can see that it does not depend on the JDK version number. &br;
Before registering, check the Java settings.
//oracleJDKをalternativesへ登録します。この時、上のインストール先から /usr/java/latest のパスを使っていればJDKのバージョン番号に依存せずに済むことが分かります。&br;
//登録前に、Javaの設定を確認しておきます。
 # update-alternatives --display java
 java - The status is manual.
// java - ステータスは手動です。
 The link now points to /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/java.
// リンクは現在 /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/java を指しています。
 /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/java - Priority item 170075
  Slave keytool: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/keytool
  Slave orbd: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/orbd
  Slave pack200: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/pack200
  Slave rmid: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/rmid
  Slave rmiregistry: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/rmiregistry
  Slave servertool: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/servertool
  Slave tnameserv: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/tnameserv
  Slave unpack200: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/unpack200
  Slave jre_exports: /usr/lib/jvm-exports/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64
  Slave jre: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre
  Slave java.1.gz: /usr/share/man/man1/java-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave keytool.1.gz: /usr/share/man/man1/keytool-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave orbd.1.gz: /usr/share/man/man1/orbd-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave pack200.1.gz: /usr/share/man/man1/pack200-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave rmid.1.gz: /usr/share/man/man1/rmid-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave rmiregistry.1.gz: /usr/share/man/man1/rmiregistry-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave servertool.1.gz: /usr/share/man/man1/servertool-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave tnameserv.1.gz: /usr/share/man/man1/tnameserv-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz
  Slave unpack200.1.gz: /usr/share/man/man1/unpack200-java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64.1.gz

The above result shows that orbd is registered as a slave. When invoking the name server, the path must be passed to orbd. The slave specifies what you want to switch with java installed with update-alternatives - install. Therefore, when registering oracleJDK to alternatives, we also specify with --slave option. &br;
Also, the priority item 170075 is priority. update-alternatives --install Specify the priority when running. Since the version of OpenJDK 7 and orcleJDK 7 is the same this time, we will specify 170075 as the priority when registering oracleJDK 7. &br;
//上記の結果で、orbd がスレーブとして登録されていることが分かります。ネームサーバを起動する際、orbd にパスが通っている必要があります。update-alternatives --install でインストールしたjavaと一緒に切り替えたいものをスレーブで指定しています。よって、oracleJDK を alternatives へ登録する際も --slave オプションで指定することにします。&br;
//また、優先項目 170075 とは優先度のことです。update-alternatives --install 実行時に優先度を指定します。今回、OpenJDK7 と orcleJDK7 のバージョンが同じなので、oracleJDK7 を登録する際の優先度も 170075 を指定することにします。&br;

For these reasons, register with the following settings.
//これらのことから、次の設定で登録します。
 # update-alternatives --install /usr/bin/java java /usr/java/latest/bin/java 170075 
   --slave /usr/bin/javac javac /usr/java/latest/bin/javac 
   --slave /usr/bin/javaws javaws /usr/java/latest/bin/javaws 
   --slave /usr/bin/keytool keytool /usr/java/latest/bin/keytool 
   --slave /usr/bin/orbd orbd /usr/java/latest/bin/orbd 
   --slave /usr/bin/pack200 pack200 /usr/java/latest/bin/pack200 
   --slave /usr/bin/rmid rmid /usr/java/latest/bin/rmid 
   --slave /usr/bin/rmiregistry rmiregistry /usr/java/latest/bin/rmiregistry 
   --slave /usr/bin/servertool servertool /usr/java/latest/bin/servertool 
   --slave /usr/bin/tnameserv tnameserv /usr/java/latest/bin/tnameserv 
   --slave /usr/bin/unpack200 unpack200 /usr/java/latest/bin/unpack200

Select oracleJDK.
//oracleJDKを選択します。
 # update-alternatives --config java
 There are 2 programs and provide 'java'.
// 2 プログラムがあり 'java' を提供します。
    Selection command
//   選択       コマンド
 -----------------------------------------------
 *+ 1           /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.2.fc20.x86_64/jre/bin/java
    2           /usr/java/latest/bin/java
 Press Enter to hold the current selection [+] or enter the selection number: 2
// Enter を押して現在の選択 [+] を保持するか、選択番号を入力します:2

Confirmation of JDK
//JDKの確認
 # java -version
 java version "1.7.0_75"
 Java(TM) SE Runtime Environment (build 1.7.0_75-b13)
 Java HotSpot(TM) 64-Bit Server VM (build 24.75-b04, mixed mode)

''Reference site (external site):''
//''参考サイト（外部サイト）:''
- [[Notes when installing Oracle's JDK on Linux >http://d.hatena.ne.jp/lettas0726/20110614/1308032663]]
#br

//以下、過去の掲載内容
//*** Vine 3.2&aname(vine);

//As an example, we will install into Vine Linux 3.2. The following procedure is executed as a superuser.

//- Installing JDK 5

//-- When provided with a Linux RPM in a self-extracting file

//Open a terminal and change to the directory where the self-extracting RPM is. Execute the following commands:

// # ls
// jdk-1_5_0_15-linux-i586-rpm.bin
// # sh jdk-1_5_0_15-linux-i586-rpm.bin

//Press the spare bar to read through the license agreement. You must agree to the license agreement to continue.

//-- When provided with a Linux self-extracting file

//Open a terminal and change to the directory where the self-extracting RPM is. Execute the following commands:

// # ls
// jdk-1_5_0_15-linux-i586.bin
// # sh jdk-1_5_0_15-linux-i586.bin

//Press the spare bar to read through the license agreement. You must agree to the license agreement to continue.

// # mkdir /usr/java
// # mv jdk1.5.0_15/ /usr/java/

//This will install into /usr/java.

//- Set environment variables

//Append these three lines to /etc/profile:

// export JAVA_HOME=/usr/java/jdk1.5.0_15
// export PATH=$PATH:$JAVA_HOME/bin
// export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar

//*** Ubuntu 7.10&aname(ubuntu);

//Under Ubuntu 7.10, it is possible to use the GNU Compiler for Java (GCJ).

// $ java -version
// java version "1.5.0"
// gij (GNU libgcj) version 4.2.1 (Ubuntu 4.2.1-5ubuntu5)

// Copyright (C) 2007 Free Software Foundation, Inc.
// This is free software; see the source for copying conditions.  There is NO
// warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// $

//However, OpenRTM-aist-Java requires Java Development Kit 5.0 (JDK 5). To comply with this, we will install JDK 5 and change the system to use Sun Java for the java command.

//Start the Synaptic package manager and search for "sun java". Double click on "sun-java5-jdk." Click "Apply."

// $ java -version
// java version "1.5.0_13"
// Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_13-b05)
// Java HotSpot(TM) Client VM (build 1.5.0_13-b05, mixed mode, sharing)
// $

//*** Debian 4.0 Etch &aname(debian);

//Under Debian 4.0 (Etch), it is possible to use the GNU Compiler for Java (GCJ).

// $ java -version
// java version "1.4.2"
// gij (GNU libgcj) version 4.1.2 20061115 (prerelease) (Debian 4.1.1-20)

// Copyright (C) 2006 Free Software Foundation, Inc.
// This is free software; see the source for copying conditions.  There is NO
// warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// $ 

//However, OpenRTM-aist-Java requires Java Development Kit 5.0 (JDK 5). To comply with this, we will install JDK 5 and change the system to use Sun Java for the java command.

//Add the following line to /etc/apt/sources.list:

// deb http://ftp.jp.debian.org/debian/ etch main contrib non-free

//Update aptitude's database:

// # aptitude update

//Search for the sun-java packages:

// # apt-cache search sun-java
// sun-java5-bin - Sun Java(TM) Runtime Environment (JRE) 5.0 (architecture dependent files)
// sun-java5-demo - Sun Java(TM) Development Kit (JDK) 5.0 demos and examples
// sun-java5-doc - Sun JDK(TM) Documention -- integration installer
// sun-java5-fonts - Lucida TrueType fonts (from the Sun JRE)
// sun-java5-jdk - Sun Java(TM) Development Kit (JDK) 5.0
// sun-java5-jre - Sun Java(TM) Runtime Environment (JRE) 5.0 (architecture independent files)
// sun-java5-plugin - The Java(TM) Plug-in, Java SE 5.0
// sun-java5-source - Sun Java(TM) Development Kit (JDK) 5.0 source files

//Install the necessary packages.

// # aptitude install sun-java5-jdk
// # aptitude install sun-java5-fonts
// # aptitude install sun-java5-plugin

//Check the installation.

// # java -version
// java version "1.5.0_14"
// Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_14-b03)
// Java HotSpot(TM) Client VM (build 1.5.0_14-b03, mixed mode, sharing)


//*** Fedora 8 &aname(fedora);

//Under Fedora Core 8, it is possible to use the GNU Compiler for Java (GCJ).

// $ java -version
// java version "1.7.0"
// IcedTea Runtime Environment (build 1.7.0-b21)
// IcedTea Client VM (build 1.7.0-b21, mixed mode)
// $ 

//However, OpenRTM-aist-Java requires Java Development Kit 5.0 (JDK 5). To comply with this, we will install JDK 5 and change the system to use Sun Java for the java command.

//Download java-1.5.0-sun-compat-1.5.0.14-1jpp.src.rpm from [[here>http://www.jpackage.org/browser/rpm.php?jppversion=1.7&id=7850]]. Download jdk-1_5_0_14-linux-i586-rpm.bin from [[here>http://java.sun.com/products/archive/j2se/5.0_14/index.html]]. Then execute these commands:

// # chmod a+x jdk-1_5_0_14-linux-i586-rpm.bin
// # ./jdk-1_5_0_14-linux-i586-rpm.bin 
// # rm -fr /usr/src/redhat/{BUILD,SOURCES,SPECS}/*
// # rpm -i java-1.5.0-sun-compat-1.5.0.14-1jpp.src.rpm
// # rpmbuild -bb /usr/src/redhat/SPECS/java-1.5.0-sun-compat.spec
// # rpm -ivh /usr/src/redhat/RPMS/i586/java-1.5.0-sun-compat-1.5.0.14-1jpp.i586.rpm
// # alternatives --config java
// # alternatives --config java
// There are 3 programs which provide 'java'.

//   Selection    Command
// -----------------------------------------------
// *+ 1           /usr/lib/jvm/jre-1.7.0-icedtea/bin/java
//    2           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
//    3           /usr/lib/jvm/jre-1.5.0-sun/bin/java
// Enter to keep the current selection[+], or type selection number: 3


//Check the install.

// # java -version
// java version "1.5.0_14"
// Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_14-b03)
// Java HotSpot(TM) Client VM (build 1.5.0_14-b03, mixed mode, sharing)
