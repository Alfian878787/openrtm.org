#ref(windows_logo.png,80%,around,nolink,left)
An MSI installer package for Windows is provided at OpenRTM.org. This installs OpenRTM-aist as well as its dependencies, such as omniORB, and related tools, such as RTSystemEditor.


#contents

**Installation by MSI package

Download the MSI package from the openrtm.org download site. All necessary files are included in the package, so no additional installers are necessary. However, for developing components, the following are recommended:

-Visual C++ or Visual Studio
-Python
-An Eclipse package including RTSystemEditor and RTCBUilder
-OpenCV 1.0 or 2.x (for running the sample components that use cameras.)

We recommend uninstalling previous versions of OpenRTM-aist, omniORB, etc. before installation.

***Installation procedure

Execute the MSI package downloaded from openrtm.org, and the following dialog will appear.


#ref(installer_en_00.png,60%,center)
CENTER:''Installer dialog''

Follow the on-screen instructions to install OpenRTM-aist. Clicking "Next" will display the software license. You must agree to this license before you can install the software.


#ref(installer_en_02.png,60%,center)
CENTER:''License screen''

***Choose a setup type

Three setup types are available:

-Standard: All features will be available.
-Custom: Allows you to select which features will be available.
-Complete: All features will be available. The same as "Standard."


#ref(installer_en_03.png,60%,center)
CENTER:''Selecting a setup type''

***Custom install

Selecting "Custom" will display the list of packages that can be installed.


#ref(installer_en_03.png,60%,center)
CENTER:''Package selection screen''

There are four packages available:

-OpenRTM-aist (C++): OpenRTM-aist main package.
-OpenRT Platform Tool Chain: Standalone version of RTSystemEditor
-omniORB: omniORB runtime libraries and headers.
-Visual C++ 2008 Runtime:Å@VC9 runtime libraries.

Typically, you should install all packages. If you will not be developing with OpenRTM-aist, then selecting only the following packages will install just runtime libraries.

-OpenRTM-aist (C++) Runtime Environment
-omniORB Runtime Environment

***Install

Click next to begin the installation.


#ref(installer_en_09.png,60%,center)
CENTER:''Installing''

When the following screen appears, the installation is complete. Click "Finish" to exit the installer.



#ref(installer_en_10.png,60%,center)
CENTER:''Installation complete''


**Installation details
***Installer actions

The installer performs the following tasks:

-Copy files into the install directory.
--Copy the OpenRTM-aist headers, libraries, scripts and samples into OpenRTM-aist\<version_number>.
--Install the standalone RTSystemEditor into OpenRTP.
--Copy the omniORB libraries, headers, etc. into omniorb.
--Copy the Visual C++ runtime into the system directory.
-Create shortcuts in the start menu below the OpenRTM-aist folder.
--Create shortcuts to the name server and rtcd.
--Create shortcuts to the sample components.
--Create shortcuts to the class reference and the IDL reference.
-Set environment variables.
--Set RTM_ROOT to OpenRTM-aist\bin.
--Set OMNI_ROOT to the omniORB library and binary directory.

***Installed files

The files are installed into the following layout.

 <install_dir>
   + OpenRTM-aist
   |  + <version>
   |     + bin: dll, lib, various commands
   |     + coil: coil header files
   |     + doc: doxygen-generated documentation
   |     + etc: vsprops, rtc.conf samples
   |     + examples
   |         + CXX: C++ sample components (.exe, .dll)
   |     + rtm: OpenRTM-aist header files
   |        + idl: OpenRTM-aist IDL files
   |     + util
   |        + rtc-template: rtc-template modules
   |
   + omniORB
   |  + <version>
   |     + bin: dll, various commands
   |     + idl: IDL files
   |     + include: omniORB header files
   |     + lib: import library, Python library
   |
   + OpenRTP
      + RTSystemEditor: Standalone version of RTSystemEditor

