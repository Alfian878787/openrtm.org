// Title: Code generation/Save and load
#contents

** (G)Code generation
After setting various profile information of RT target component to be generated, generate template code.
When you click the [Generate Code] button on the basic profile input page, template code is generated according to the entered profile information.
//**コード生成
//生成対象 RTコンポーネントの各種プロファイル情報を設定した後、テンプレートコードの生成を行います。
//基本プロファイル入力ページの [コード生成] ボタンをクリックすると、入力したプロファイル情報に応じたテンプレートコードの生成が行われます。
#br

#ref(CodeGen.png,center,60%)
CENTER: ''Generate template code''
//CENTER:''テンプレートコードの生成''
#br
The template files generated at the time of executing code generation when selecting each language are as follows.
CENTER:''Generated file list''
//各言語を選択した際のコード生成実行時に生成されるテンプレートファイルは以下のとおりです。
//CENTER:''生成ファイル一覧''

-C++ ( When you do not select the check box of "Use old build environment." )
|LEFT:270|LEFT|c
|CENTER:file name|CENTER:Description|
|<RTC name> Comp.cpp|Code to launch the RT component.|
|<RTC name>.h|It is the header of the RT component body.|
|<RTC name>.cpp|This is the code of the RT component body.|
|<Service type name>SVC_impl.h|It is the header of the service provider.（''*''）&br;Only Type specified by ServiceProvider is output.|
|<Service type name>SVC_impl. cpp|The implementation code of the service provider.（''*''）&br;Only Type specified by ServiceProvider is output.|
|CMakeLists.txt|It is a configuration file file for CMake.|
|doc/||
|doxyfile.in|It is a setting file file for Doxygen.|
|cmake/||
|uninstall_target.cmake.in|Uninstall target addition template file (for CMake)|
|cpack_options.cmake|WiX package creation module (for CMake/WiX)|
|License.rtf|License display included in package information (for CMake/WiX)|
|wix.xsl.in|Template for specifying files to be included in WiX package (for CMake/WiX)|
|cmake/Modules/||
|FindOpenRTM.cmake|OpenRTM-aist Environment setting acquisition module (for CMake)|
//-C++ ( When you do not select the check box of "Use old build environment." )
//|LEFT:270|LEFT|c
//|CENTER:ファイル名|CENTER:説明|
//|<RTC名> Comp.cpp|RTコンポーネントを起動するコードです。|
//|<RTC名>.h|RTコンポーネント本体のヘッダです。|
//|<RTC名>.cpp|RTコンポーネント本体のコードです。|
//|<サービス型名>SVC_impl.h|サービスプロバイダーのヘッダです。（''*''）&br;ServiceProvider にて指定された Type のみが出力されます。|
//|<サービス型名>SVC_impl. cpp|サービスプロバイダーの実装コードです。（''*''）&br;ServiceProvider にて指定された Type のみが出力されます。|
//|CMakeLists.txt|CMake用の設定ファイルファイルです。|
//|doc/||
//|doxyfile.in|Doxygen 用の設定ファイルファイルです。|
//|cmake/||
//|uninstall_target.cmake.in|アンインストールターゲット追加の雛形ファイル（CMake用）|
//|cpack_options.cmake|WiX パッケージ作成用モジュール（CMake/WiX用）|
//|License.rtf|パッケージ情報に含まれるライセンス表示（CMake/WiX用）|
//|wix.xsl.in|WiX パッケージに含めるファイルを指定するテンプレート（CMake/WiX用）|
//|cmake/Modules/||
//|FindOpenRTM.cmake|OpenRTM-aist 環境設定取得用モジュール（CMake用）|

-C++ ( When the check box of [Use old build environment.] Is turned on )
|LEFT:270|LEFT|c
|CENTER:file name|CENTER:Description|
|<RTC name> Comp.cpp|Code to launch the RT component.|
|<RTC name>.h|It is the header of the RT component body.|
|<RTC name>.cpp|This is the code of the RT component body.|
|<Service type name>SVC_impl.h|It is the header of the service provider.（''*''）&br;Only Type specified by ServiceProvider is output.|
|<Service type name>SVC_impl. cpp|The implementation code of the service provider.（''*''）&br;Only Type specified by ServiceProvider is output.|
|Makefile.<RTC name>|Makefile for compiling.|
|<RTC name>_vc8.sln|It is a solution file for Visual Studio 2005.|
|<RTC name>_vc8.vcproj|RT component project file for Visual Studio 2005.|
|<RTC name>Comp_vc8.vcproj|Project code for start code for Visual Studio 2005.|
|<RTC name>_vc9.sln|It is a solution file for Visual Studio 2008.|
|<RTC name>_vc9.vcproj|RT component project file for Visual Studio 2008.|
|<RTC name>Comp_vc9.vcproj|Project code for start code for Visual Studio 2008.|
|Copyprops.bat|Property file This is a batch file for copying.|
|User_config.vsprops|User defined property file.|
|OpenRTM-aist.vsprops|Property file for OpenRTM-aist.|
//-C++ ( [Use old build environment.] のチェックボックスを ON した場合 )
//|LEFT:270|LEFT|c
//|CENTER:ファイル名|CENTER:説明|
//|<RTC名> Comp.cpp|RTコンポーネントを起動するコードです。|
//|<RTC名>.h|RTコンポーネント本体のヘッダです。|
//|<RTC名>.cpp|RTコンポーネント本体のコードです。|
//|<サービス型名>SVC_impl.h|サービスプロバイダーのヘッダです。（''*''）&br;ServiceProvider にて指定された Type のみが出力されます。|
//|<サービス型名>SVC_impl. cpp|サービスプロバイダーの実装コードです。（''*''）&br;ServiceProvider にて指定された Type のみが出力されます。|
//|Makefile.<RTC名>|コンパイルするための Makefile です。|
//|<RTC名>_vc8.sln|Visual Studio 2005用のソリューションファイルです。|
//|<RTC名>_vc8.vcproj|Visual Studio 2005用の RTコンポーネントプロジェクトファイルです。|
//|<RTC名>Comp_vc8.vcproj|Visual Studio 2005用の起動コード用プロジェクトファイルです。|
//|<RTC名>_vc9.sln|Visual Studio 2008用のソリューションファイルです。|
//|<RTC名>_vc9.vcproj|Visual Studio 2008用の RTコンポーネントプロジェクトファイルです。|
//|<RTC名>Comp_vc9.vcproj|Visual Studio 2008用の起動コード用プロジェクトファイルです。|
//|Copyprops.bat|プロパティ・ファイルコピー用バッチファイルです。|
//|User_config.vsprops|ユーザー定義用プロパティ・ファイルです。|
//|OpenRTM-aist.vsprops|OpenRTM-aist 用プロパティ・ファイルです。|

-Java
|LEFT:290|LEFT|c
|CENTER:file name|CENTER:Description|
|<RTC name>Comp.java|Class for starting RT component.|
|<RTC name>.java|Component Profile of RT component, Initialization processing, etc.|
|<RTC name>Impl.java|It is the body of the RT component.|
|build_<RTC name>.xml|It is a file for RT component build.|
|<Service type name> SVC_impl.java|Implementation class of the service provider.（''*''）|
|CMakeLists.txt|It is a configuration file file for CMake.|
|doc/||
|doxyfile.in|It is a setting file file for Doxygen.|
|cmake_modules/||
|cmake_javacompile.cmake.in|Model file for adding Java compilation targets (for CMake)|
|FindOpenRTMJava.cmake|OpenRTM-aist-Java environment setting acquisition module (for CMake)|
|cmake/||
|uninstall_target.cmake.in|Uninstall target addition template file (for CMake)|
|cpack_options.cmake|WiX package creation module (for CMake/WiX)|
|License.rtf|License display included in package information (for CMake/WiX)|
|cpack_resources/||
|wix.xsl.in|Template for specifying files to be included in WiX package (for CMake/WiX)|
//-Java
//|LEFT:290|LEFT|c
//|CENTER:ファイル名|CENTER:説明|
//|<RTC名>Comp.java|RTコンポーネントの起動用クラスです。|
//|<RTC名>.java|RTコンポーネントの Component Profile、初期化処理などを定義したクラスです。|
//|<RTC名>Impl.java|RTコンポーネントの本体です。|
//|build_<RTC名>.xml|RTコンポーネントのビルド用ファイルです。|
//|<サービス型名> SVC_impl.java|サービスプロバイダーの実装クラスです。（''※''）|
//|CMakeLists.txt|CMake用の設定ファイルファイルです。|
//|doc/||
//|doxyfile.in|Doxygen用の設定ファイルファイルです。|
//|cmake_modules/||
//|cmake_javacompile.cmake.in|Java コンパイルターゲット追加の雛形ファイル（CMake用）|
//|FindOpenRTMJava.cmake|OpenRTM-aist-Java 環境設定取得用モジュール（CMake用）|
//|cmake/||
//|uninstall_target.cmake.in|アンインストールターゲット追加の雛形ファイル（CMake用）|
//|cpack_options.cmake|WiXパッケージ作成用モジュール（CMake/WiX用）|
//|License.rtf|パッケージ情報に含まれるライセンス表示（CMake/WiX用）|
//|cpack_resources/||
//|wix.xsl.in|WiXパッケージに含めるファイルを指定するテンプレート（CMake/WiX用）|

-Python
|LEFT:290|LEFT|c
|CENTER:file name|CENTER:Description|
|<RTC name>.py|This is the code of the RT component.|
|<Service type name>_idl.py||
|<Service type name>_idl_example.py|Implementation file of the service provider.（''*''）|
|CMakeLists.txt|It is a configuration file file for CMake.|
|doc/||
|doxyfile.in|It is a setting file file for Doxygen.|
|cmake_modules/||
|FindOpenRTMPython.cmake|OpenRTM-aist-Python Environment setting acquisition module (for CMake)|
|cmake/||
|uninstall_target.cmake.in|Uninstall target addition template file (for CMake)|
|cpack_options.cmake|WiX package creation module (for CMake/WiX)|
|License.rtf|License display included in package information (for CMake/WiX)|
|cpack_resources/||
|Description.txt|Description included in package information (for CMake)|
|License.txt|License display included in package information (for CMake/Linux)|
|wix.xsl.in|Template for specifying files to be included in WiX package (for CMake/WiX)|
//-Python
//|LEFT:290|LEFT|c
//|CENTER:ファイル名|CENTER:説明|
//|<RTC名>.py|RTコンポーネントのコードです。|
//|<サービス型名>_idl.py||
//|<サービス型名>_idl_example.py|サービスプロバイダーの実装ファイルです。（''※''）|
//|CMakeLists.txt|CMake用の設定ファイルファイルです。|
//|doc/||
//|doxyfile.in|Doxygen用の設定ファイルファイルです。|
//|cmake_modules/||
//|FindOpenRTMPython.cmake|OpenRTM-aist-Python 環境設定取得用モジュール（CMake用）|
//|cmake/||
//|uninstall_target.cmake.in|アンインストールターゲット追加の雛形ファイル（CMake用）|
//|cpack_options.cmake|WiXパッケージ作成用モジュール（CMake/WiX用）|
//|License.rtf|パッケージ情報に含まれるライセンス表示（CMake/WiX用）|
//|cpack_resources/||
//|Description.txt|パッケージ情報に含まれる説明（CMake用）|
//|License.txt|パッケージ情報に含まれるライセンス表示（CMake/Linux用）|
//|wix.xsl.in|WiXパッケージに含めるファイルを指定するテンプレート（CMake/WiX用）|

RtcBuilder parses IDL to generate an operation template when outputting this service provider's implementation file. However, the following restrictions exist in this parsing function.
- Only #include directives can be used in the preprocessor. (#ifdef etc. are simply ignored)
- The operation to be created is only the operation of the directly specified interface, and the operation inherited from the parent is not included.
//''※'' RtcBuilder は、このサービスプロバイダーの実装ファイルを出力する際、オペレーションのテンプレートを生成するために、IDL をパースします。しかし、このパース機能には以下のような制限が存在します。
//-プリプロセッサにおいて、#include ディレクティブのみ使用可能。（#ifdef などは単に無視される）
//-生成されるオペレーションは直接指定されたインタフェースのオペレーションのみで、親から継承したオペレーションは含まれない。

*** (G)Output selection
RtcBuilder displays a confirmation screen for selecting which output to use, if a file with the same name as the generated file already exists in the output destination and there is a difference in the output content between the existing file and the generated file I will.
//***出力選択
//RtcBuilder は、生成したファイルと同名のファイルが出力先に既に存在し、既存ファイルと生成ファイルの間で出力内容に差異が存在する場合、どちらの出力を利用するかを選択する確認画面が表示されます。
#br


#ref(fig4-2SelectOutPut_ja.png,50%,center)
CENTER: ''Output selection screen''
//CENTER:''出力選択画面''
#br

For output selection, select from the following three output candidates.
-Original: Leave existing files as they are
-Merge: Merge using merge block ('' *1 '')
-Generate: Overwrite with newly generated content
//出力の選択では、以下の3つ出力候補の中から選択します。
//-Original ： 既に存在するファイルをそのまま残す
//-Merge ： マージブロックを利用したマージを行う（''※１''）
//-Generate ： 新たに生成した内容で上書きする
// -Cancel ： 既に存在するファイルをそのまま残す

''*1'' Merge overwrites only the range enclosed by the <rtc-template block="block"> tag with the latest generation content. In this generated template, this tag encloses the range that the user does not change beforehand.
Please keep in mind that this tag will disappear after merging, so please do not modify it.
//''※１'' Mergeでは、<rtc-template block=”block”>タグで囲まれた範囲のみを最新の生成内容で上書します。生成したテンプレートは、ユーザーが変更しない範囲をあらかじめこのタグで囲んでいます。
//このタグの中は変更後もマージすることで消えてしまいますので、修正しないようにしてください。

*** (G)Perspective switching
If the development environment plug-in of the target language is installed, a confirmation message of perspective switching will be displayed after code generation is executed.
If the target plug-in is installed, the following message will be displayed, so please select whether to switch the perspective.
//***パースペクティブ切り替え
//生成対象言語の開発環境用プラグインがインストールされている場合、コード生成実行後にパースペクティブ切り替えの確認メッセージが表示されます。
//対象のプラグインがインストールされている場合には以下のようなメッセージが表示されますので、パースペクティブの切り替えを行うかどうかを選択してください。
#br


#ref(fig4-3MessagePerspectiveSwitch_ja.png,70%,center)
CENTER:''Perspective switching confirmation message''
//CENTER:''パースペクティブ切り替え確認メッセージ''
#br
The relationship between the generated language and the development environment plug-in is as follows.
-Java: JDT (Java Development Tools) → It is a development environment included in Eclipse in advance.
-C++: CDT (C/C++ Development Tooling)
-Python: PyDev
//生成言語と開発環境用プラグインの関係は以下のとおりです。
//-Java ： JDT(Java Development Tools) → あらかじめ Eclipse に含まれている開発環境です。
//-C++ ： CDT(C/C++ Development Tooling)
//-Python ： PyDev

If the development environment plug-in for each language is installed and the output target project is a newly created project, the target language attribute is set in the property of each project.
//''※''各言語用の開発環境用プラグインがインストールされており、出力対象プロジェクトが新規作成プロジェクトの場合は、各プロジェクトのプロパティに対象言語の属性が設定されます。

** (G)Generation file packaging function
It is a function to archive the generated template file, binary file for execution of the RT component created based on the template file, etc. in various formats.
Clicking on the [Package] button on the basic profile entry page will display the "RT Component Packaging" screen for setting the packaging content.
//**生成ファイルのパッケージング機能
//生成したテンプレートファイル、テンプレートファイルを基に作成した RT コンポーネントの実行用バイナリファイルなどを各種形式でアーカイブする機能です。
//基本プロファイル入力ページの [パッケージ化] ボタンをクリックすると、パッケージング内容を設定するための「RTコンポーネント パッケージ化」画面が表示されます。
#br

#ref(fig6-1FunctionPack_ja.png,60%,center)
CENTER:''Packaging function of various deliverables''
//CENTER:''図 6-1 各種成果物のパッケージング機能''
//CENTER:''各種成果物のパッケージング機能''
#br
#br

#ref(fig6-2ExportRTC_ja.png,60%,center)
CENTER:''RT Component Packaging Screen''
//CENTER:''図 6-2 RTコンポーネント エクスポート画面''
//CENTER:''RTコンポーネント パッケージ化画面''
#br
Each item is explained below.
CENTER:''RT Component Packaging Screen Item Description''
|LEFT:200|LEFT|c
| Item | Description |
| Target project | Please select the project to be packaged. |
| Destination directory | Please enter the directory to output packaged artifacts. By using the "Browse" button, the directory selection dialog will be displayed. |
| Archive method | Please select the format of the archive to be created. |
| Optional | A brief description of the operation within each action. Optional items. |
| Archive format | It is possible to create an archive using the ZIP format and an archive using the tar format. Please select the format format to use. |
| Compression of archive contents | To compress the contents of the archive, please select the check box. |
| Directory structure | Please select whether to archive with the directory structure of the project to be archived as it is, or archive all in the root directory. |
For each archive method ("source" "binary" "source+binary"), which file type to include in the archive can be set in the "setting screen" described later.
//以下、各項目について説明いたします。
//CENTER:''RTコンポーネント パッケージ化画面 項目説明''
//|LEFT:200|LEFT|c
//|項目|説明|
//|対象プロジェクト|パッケージング対象のプロジェクトを選択してください。|
//|宛先ディレクトリ|パッケージングした成果物を出力するディレクトリーを入力してください。｢参照｣ボタンを使用することで、ディレクトリー選択ダイアログが表示されます。|
//|アーカイブ方式|作成するアーカイブの形式を選択してください。|
//|オプション|各アクション内での動作に関する概要説明。省略可能項目。|
//|アーカイブ形式|ZIP フォーマットを利用したアーカイブと、tar フォーマットを利用したアーカイブを作成することが可能です。使用するフォーマット形式を選択してください。|
//|アーカイブ内容の圧縮|アーカイブ内容を圧縮する場合には、チェックボックスを ON にしてください。|
//|ディレクトリー構造|アーカイブ対象プロジェクトのディレクトリ構造をそのまま保持した形でアーカイブを行うか、全てルートディレクトリに入れた形でアーカイブを行うかを選択してください。|
//''※''アーカイブ方式(｢ソース｣｢バイナリ｣｢ソース＋バイナリ｣)ごとに、どのファイル種類をアーカイブに含めるかは、後述の｢設定画面｣にて設定することができます。

#br
** (G)Saving and Loading Settings
RTCBuilder allows you to save the contents entered in the RTC Profile Editor in the RTC profile XML (RTC.xml) and reload the saved content.
//**設定内容のセーブとロード 
//RTCBuilder では、RTC プロファイルエディタで入力した内容を RTC プロファイル XML(RTC.xml) に保存したり、保存した内容を再度読み込むことが可能です。

***(G)Save
The contents entered in RTC profile editor can be saved in RTC profile XML (RTC.xml). The input contents can be saved by the following operation.
- Right-click on the editor and select [Save] or [Save As ...] from the displayed context menu
- Select [File] > [Save...] or [File] > [Save As...] on the menu bar
//***セーブ
//RTC プロファイルエディタで入力した内容は、RTC プロファイル XML(RTC.xml) に保存することが可能です。入力内容は以下の操作により保存することができます。
//-エディタを右クリックし、表示されたコンテクストメニューから [Save] もしくは [Save As…] を選択
//-メニューバーの [File] > [Save…] もしくは [File] > [Save As…] を選択

If you select [Save As ...], it can be saved in any project.
''*''[Save As…] を選んだ場合、任意のプロジェクト内に保存することが可能です。
#br


|
#ref(fig5-1Save_ja.png,40%,center)|
#ref(fig5-1Save2_ja.png,40%,center)|
|>|CENTER:''Save'' |
//|>|CENTER:''セーブ''|
#br

// ''　※''任意のプロジェクト以外のディレクトリーを保存先に指定した場合は、以下のメッセージが表示され保存されません。保存先を任意のプロジェクト内のディレクトリーに指定し直してください。
// #br
// 
// #ref(SaveError.png,nolink,center)
// CENTER:''保存先の指定が不正の場合のエラー''
// 
***(G)Load
The RTC profile XML (RTC.xml) that saved the contents of the RTC profile editor can be read by the following operation.
- Right-click the editor and select [Open] from the context menu
- Select [File] > [Open file...] from the menu bar
//***ロード
//RTC プロファイルエディタの内容を保存した RTC プロファイル XML(RTC.xml) は以下の操作により読み込むことが可能です。
//-エディタを右クリックし、コンテクストメニューから [Open] を選択
//-メニューバーの [ファイル] > [ファイルを開く…] を選択
#br


|
#ref(fig5-2Load_ja.png,40%,center)|
#ref(fig5-2Load2_ja.png,40%,center)|
|>|CENTER:''Lord'' |
//|>|CENTER:''ロード''|
#br

