#contents

//* [[MICO CCM]]

** ccmd (mico-ccmd) 
MICO に付属する CCM デーモン。
ccmd は単一ホスト上でのコンポーネントのインストール、デプロイされたコンポーネントの管理を行う。
したがって、複数ホストにコンポーネントを実行したい場合は各ホスト上で実行しなければならない。
mico-ccmd はComponentInstallation, AssemblyFactory および ServerActivator インターフェース(およびサービス)が実装されている。

: ComponentInstallation |
::mico-ccmdが実行されているホスト上では、ComponentInstallation インターフェースを通してコンポーネント実装をインストールすることができる。
::通常はmico-ccmloadによりコンポーネントをインストールする。

: AssemblyFactory |
::AssemblyFactory を通してコンポーネントのアセンブリをオンデマンドで起動することができる。

: ServerActivator |
::ServerActivator インターフェースを通してコンポーネントサーバーをオンデマンドで起動することができる。

デプロイメントツールはまず始めに、mico-ccmと通信しコンポーネント実装ファイルをアップロードし、そのホストでcomponentserverを起動する。
(コンポーネント毎にプロセス作るのか？)
mico-ccmdは通常永続的バックグラウンドで動作するデーモンで、表立っては何もしない。
もし終了シグナル(SIGINT, Ctrl-C)を受け取ると、すべてのアセンブリおよびコンポーネントサーバーを終了させる。
最後に、インストールされたすべてのコンポーネント実装を削除し終了する。


*** オプション
| --root <pkgdir> | インストールされるコンポーネント実装が保存されるディレクトリへのパス。指定されなければカレントディレクトリに保存される。|
|--ior <filename> | mico-ccmd の IORをファイルに保存したい場合はこのオプションでファイル名を指定する。ハイフンで標準出力に出力する。|
|-v | 冗長オプション。コンポーネントサーバーのスタート、ストップ等のステータスメッセージを標準出力に出力する。(iorとぶつからない？www)|

MICO ORB の標準オプションも使用可能。
-ORBIIOPAddr により、特定のIPアドレスにORBをアサイン (-ORBIIOPAddr hoge.aist.go.jp::1234 等) することが可能である。
ポートが既知であれば、mico-ccmd　をオブジェクトURLで指定することも可能である。
mico-ccmdのオブジェクトキーは "MicoCCMD" なので、
 corbaloc::<host>:<port>/MicoCCMD
といったURLでccmdのオブジェクトを指定することができる。

** ccmload (mico-ccmload)

ccmload は単一のコンポーネントを配置することができる簡単なデプロイメントツールである。
ccmloadはMicoCCMデーモンと通信し新たなコンポーネントサーバーを起動し新たなコンポーネントをロードする。
そして、共有ライブラリ <library file> からホーム <home name> をコンテナにロードする。
オプションとして、homeをネームサーバに登録することもできる。
<home name> はデプロイされるコンポーネントホームの完全な名前である必要がある。
<library name> は <home name> の実装を含む共有ライブラリファイル名でなくてはならない。
ccmloadは実装の共有ライブラリをアップロードするのではなく、ファイル名はMicoCCMデーモンがアクセスできるものでなくてはならない。

| --ccmd <IOR> | MicoCCM Daemon のオブジェクトリファレンスを与える。|
| --host <host>[:port] | このオプションによりMicoCCM デーモンのアドレスとポートを与えることができる。ポート番号が指定されない場合のデフォルトポートは1234である。|
| --ns <name> | デプロイされるホームを指定の名前でネームサーバに登録する。|
| --ior <filename> | デプロイされるホームのオブジェクトリファレンスを指定のファイルに書き出す。ハイフンで標準出力に書き出す。|
| -v | 冗長メッセージ出力 |

