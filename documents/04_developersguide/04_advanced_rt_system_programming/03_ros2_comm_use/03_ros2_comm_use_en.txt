// Title: How to use ROS2 Communication Function
#contents

** C++版
*** Windows
**** ROSのインストール
以下のサイトの手順に従ってRos4WinをUSBメモリにインストールしてください。

- http://hara.jpn.com/_default/ja/Topics/ROS_Windows_Install.html


以下のコマンドでClinkを起動してください。インストールしたドライブが違う場合は適宜変更してください。

 D:\opt\start_ros.bat

移行の作業はClink上で実行します。

**** OpenRTM-aistのビルド

CMake実行時に''ROS_ENABLE''のオプションをONにします。

 cmake -DOMNI_VERSION=42  -DOMNI_MINOR=3 -DOMNITHREAD_VERSION=41 -DORB_ROOT=C:/workspace/omniORB-4.2.3-win64-vc141 -DCORBA=omniORB -G "Visual Studio 15 2017" -A x64 -DROS_ENABLE=ON ..

その他の手順は通常と同じです。

-  [[OpenRTM-aistのビルド手順>/ja/node/6339]]

**** 動作確認
以下のrtc.confを作成します。
''manager.modules.load_path''はビルドしたフォルダによって適宜変更してください。

 manager.modules.load_path: C:\\workspace\\openrtm\\build_omni\\devel\\bin\\Release
 manager.modules.preload: ROSTransport.dll
 manager.components.preconnect: ConsoleOut0.in?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter, ConsoleIn0.out?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter
 manager.components.preactivation: ConsoleOut0, ConsoleIn0

まず''ROSTransport.dll''のロードが必要になります。
ロードするモジュールは''manager.modules.preload''オプションで設定します。
コネクタの生成は''manager.components.preconnect''のオプションで設定します。
インターフェース型に''ros''、マーシャリング型にROSのシリアライザ、トピック名に適当な名前を設定します。

デフォルトで使用可能なシリアライザ一覧は以下の通り。

- [[ROS、ROS2にデフォルトで対応しているメッセージ型>/ja/node/6585]]

RTCを起動して動作確認します。


*** Ubuntu
**** ROSのインストール

以下のコマンドでインストールしてください。

 export ROS_DISTRO=melodic
 sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
 sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
 sudo apt-get -y update
 sudo apt-get -y install ros-${ROS_DISTRO}-ros-base
 sudo rosdep init
 rosdep update

ROSの環境設定のbashを実行するようにします。

 echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc
 source ~/.bashrc

**** OpenRTM-aistのビルド

CMake実行時に''ROS_ENABLE''のオプションをONにします。

 cmake -DCORBA=omniORB -DCMAKE_BUILD_TYPE=Release -DROS_ENABLE=ON ..

その他の手順は通常と同じです。

-  [[OpenRTM-aistのビルド手順>/ja/node/6339]]

ビルド後にインストールしてください。

 cmake --build . --target install

**** 動作確認
以下のrtc.confを作成します。

 manager.modules.load_path: /usr/local/lib/openrtm-2.0/transport/
 manager.modules.preload: ROSTransport.so
 manager.components.preconnect: ConsoleOut0.in?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter, ConsoleIn0.out?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter
 manager.components.preactivation: ConsoleOut0, ConsoleIn0

まず''ROSTransport.so''のロードが必要になります。
ロードするモジュールは''manager.modules.preload''オプションで設定します。
コネクタの生成は''manager.components.preconnect''のオプションで設定します。
インターフェース型に''ros''、マーシャリング型にROSのシリアライザ、トピック名に適当な名前を設定します。

デフォルトで使用可能なシリアライザ一覧は以下の通り。

- [[ROS、ROS2にデフォルトで対応しているメッセージ型>/ja/node/6585]]

ConsoleInComp.exe、ConsoleOutComp.exeを起動して動作確認します。

それぞれ別のターミナルから起動してください。

 /usr/local/share/openrtm-2.0/components/c++/examples/ConsoleInComp

 /usr/local/share/openrtm-2.0/components/c++/examples/ConsoleOutComp

** Python版
*** Windows
**** ROSのインストール
以下のページに従ってROSをUSBメモリにインストールしてください。

- http://www.hara.jpn.com/_default/ja/Topics/ROS_Windows_Install.html

**** OpenRTM-aistのインストール
OpenRTM-aist 1.2等をインストーラーでインストールしておいてください。
OpenRTM-aist Python版のソースコードを入手してください。

- https://github.com/OpenRTM/OpenRTM-aist-Python

以下のコマンドでOpenRTM-aist Python版をインストールしてください。

 python setup.py build
 python setup.py install


**** 動作確認
''start_ros.bat''を2回実行して、ROSの環境設定をしたウインドウを2つ開いてください。

 D:\opt\start_ros.bat

片方のウインドウで''roscore''を起動します。

 roscore

もう片方のウインドウでOpenRTM-aistをインストールしたディレクトリのPYTHONPATHに設定します。

 set PYTHONPATH=%PYTHONPATH%;C:\Python37\Lib\site-packages;C:\Python37\Lib\site-packages\OpenRTM_aist;C:\Python37\Lib\site-packages\OpenRTM_aist\utils;C:\Python37\Lib\site-packages\OpenRTM_aist\RTM_IDL

以下のrtc.confを作成します。

 manager.modules.load_path: C:\\Python37\\Lib\\site-packages\\OpenRTM_aist\\ext\\transport\\ROSTransport
 manager.modules.preload: ROSTransport.py
 manager.components.preconnect: ConsoleOut0.in?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter, ConsoleIn0.out?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter
 manager.components.preactivation: ConsoleOut0, ConsoleIn0

上記のrtc.confでRTCを起動して動作確認してください。

*** Ubuntu
**** ROSのインストール
C++版と同じ手順でROSをインストールしてください。

**** OpenRTM-aistのインストール
以下のパッケージをインストールしてください。

 sudo apt-get install python-omniorb-omg omniidl-python doxygen

以下のコマンドでOpenRTM-aist Python版をインストールします。

 git clone https://github.com/OpenRTM/OpenRTM-aist-Python
 cd OpenRTM-aist-Python
 python setup.py build
 sudo python setup.py install

**** 動作確認
以下のrtc.confを作成します。

 manager.modules.load_path: /usr/local/lib/python2.7/dist-packages/OpenRTM_aist/ext/transport/ROSTransport/
 manager.modules.preload: ROSTransport.py
 manager.components.preconnect: ConsoleOut0.in?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter, ConsoleIn0.out?interface_type=ros&marshaling_type=ROSFloat32&topic=chatter
 manager.components.preactivation: ConsoleOut0, ConsoleIn0

以下のコマンドでRTCを起動して動作確認してください。

 /usr/local/share/openrtm-2.0/components/python/SimpleIO/ConsoleIn.py

 /usr/local/share/openrtm-2.0/components/python/SimpleIO/ConsoleOut.py