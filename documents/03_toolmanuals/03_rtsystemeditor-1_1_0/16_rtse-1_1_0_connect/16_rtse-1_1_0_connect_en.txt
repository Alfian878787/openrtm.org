// Title: System editor (connection between ports)
#contents

This section explains connection between data ports and service ports.
//データポート間、サービスポート間の接続について説明します。


*** (G)Connection between data ports
Connect data port "InPort" and "OutPort". When dragging and dropping between these, the following dialog will be displayed. The setting items of "Buffer" are hidden in the initial display.
//*** データポート間接続
//データポートの接続で、「InPort」と「OutPort」を接続します。これらの間をドラッグ＆ドロップでつなぐと以下のダイアログが表示されます。なお、初期表示時には「Buffer」の設定項目は隠れています。
#br

#ref(fig57DataConnectDialog.png,100%,center)
CENTER: ''Data port connector profile dialog''
//CENTER:''データポートのコネクタプロファイルダイアログ''
#br

The items and conditions of the dialog are as follows.
//ダイアログの項目と条件は以下のとおりです。
#br


CENTER: ''Data port connection dialog items and requirements''
//CENTER:''データポート接続のダイアログ項目と必要条件''
|LEFT:20|LEFT:70|LEFT:100|LEFT:300|c
| No. | Dialogue item name | ConnectorProfile | Requirement |
//|№|ダイアログ項目名|ConnectorProfile|必要条件|
| ① | Name | name | None |
//|①|Name|name|特になし|
|②|Data Type|&lt;&lt;properties&gt;&gt;&br;dataport.data_type|Specify the data type to be transmitted and received between the data ports connected by this connector.&br;Select from data types that can be sent and received from each port. However, when including Any, it accepts any value of the other port.|
//|②|Data Type|&lt;&lt;properties&gt;&gt;&br;dataport.data_type|このコネクタで接続されているデータポート間で送受信するデータ型を指定します。&br;それぞれのポートで互いに送受信可能なデータ型から選択します。ただし、Any を含む場合は相手ポートのどのような値も許容します。|
|③|Instance Type|&lt;&lt;properties&gt;&gt;&br;dataport.interface_type|Specify the interface type supported by the RT system designer or supported on the RT middleware on which RTC runs.&br;Select from the interface types supported by each port. However, when including Any, it allows any interface of the other port.|
//|③|Instance Type|&lt;&lt;properties&gt;&gt;&br;dataport.interface_type|RTシステム設計者が想定する、もしくは RTC が動作する RTミドルウェア上でサポートされているインターフェース種別を指定します。&br;それぞれのポートで互いにサポートしているインターフェース種別から選択します。ただし、Any を含む場合は相手ポートのどのようなインターフェースも許容します。|
|④|Dataflow Type|&lt;&lt;properties&gt;&gt;&br;dataport.dataflow_type|Specify the data flow type that is supported by the RT system designer or RT Middleware on which RTC runs.&br;Select from the data flow types supported by each port. However, when including Any, it allows any kind of data flow on the partner port.|
//|④|Dataflow Type|&lt;&lt;properties&gt;&gt;&br;dataport.dataflow_type|RTシステム設計者が想定する、もしくは RTC が動作する RTミドルウェア上でサポートされているデータフロー型を指定します。&br;それぞれのポートで互いにサポートしているデータフロー型から選択します。ただし、Any を含む場合は相手ポートのどのようなデータフローも許容します。|
|⑤|Subscription Type|&lt;&lt;properties&gt;&gt;&br;dataport.subscription_type|[Condition required when the value of Dataflow Type is Push]&br;Specify the type of subscription supported by the RT system designer, or on RT Middleware on which RTC runs.&br;Select from among the subscription types supported by each port. However, if you include Any, you allow any subscription type of the other party.|
//|⑤|Subscription Type|&lt;&lt;properties&gt;&gt;&br;dataport.subscription_type|[Dataflow Typeの値がPushの時に必要な条件]&br;RTシステム設計者が想定する、もしくはRTCが動作するRTミドルウェア上でサポートされているサブスクリプション種別を指定します。&br;それぞれのポートで互いにサポートしているサブスクリプション種別から選択します。ただし、Anyを含む場合は相手のどのようなサブスクリプション種別も許容します。|
|⑥|Push Rate(Hz)|&lt;&lt;properties&gt;&gt;&br;dataport.push_interval|[Condition required when the value of Dataflow Type is "Push" and Subscription Type is "Periodic"]&br;When the subscription type is "Periodic", specify the data transmission cycle. Specify the transmission cycle with a positive value (decimal possible).|
//|⑥|Push Rate(Hz)|&lt;&lt;properties&gt;&gt;&br;dataport.push_interval|[Dataflow Typeの値が”Push”でかつSubscription Typeが”Periodic”の時に必要な条件]&br;サブスクリプション種別が「Periodic」な場合にデータの送信周期を指定します。送信周期は正数値（小数可）で指定します。|
|⑦|Push Policy|&lt;&lt;properties&gt;&gt;&br;dataport.publisher.push_policy|Data transmission policy. [Condition required when Dataflow Type value is "Push" and Subscription Type is "Periodic"] Select from all, fifo, skip, new.&br;''all'':Bulk transmission of data in buffer&br;''fifo'':Send data in buffer one by one with FIFO&br;''skip'':Sending by thinning out the data in the buffer&br;''new'':Send the latest value of the data in the buffer (old values are discarded.)|
//|⑦|Push Policy|&lt;&lt;properties&gt;&gt;&br;dataport.publisher.push_policy|データ送信ポリシー。[Dataflow Typeの値が”Push”でかつSubscription Typeが”Periodic”の時に必要な条件]all、fifo、skip、new から選択します。&br;''all'':バッファ内のデータを一括送信&br;''fifo'':バッファ内のデータをFIFOで１個ずつ送信&br;''skip'':バッファ内のデータを間引いて送信&br;''new'':バッファ内のデータの最新値を送信（古い値は捨てられます。）|
|⑧|Skip Count|&lt;&lt;properties&gt;&gt;&br;dataport.publisher.skip_count|Number of transmitted data skips. [Required condition when the value of Push Policy is "skip"] The data in the buffer is thinned out with this setting value and transmitted.|
//|⑧|Skip Count|&lt;&lt;properties&gt;&gt;&br;dataport.publisher.skip_count|送信データスキップ数。[Push Policy の値が”skip”の時に必要な条件]バッファ内のデータがこの設定値で間引されて送信されます。|
|⑨|Details|―|When the check box is checked, detailed setting items of the buffer of the I / O port are displayed.&br;It is hidden at the initial display of the dialog.|
//|⑨|詳細|―|チェックボックスをチェックすると、入出力ポートのバッファの詳細設定項目が表示されます。&br;ダイアログの初期表示時は隠れています。|
|⑩&br;⑮|Buffer length&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.length|Buffer length |
//|⑩&br;⑮|Buffer length&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.length|バッファの長さ|&br;''overwrite'':Overwrite the data.&br;''do_nothing '': I do not do anything.&br;''block'':I will block.
|⑪&br;⑯|Buffer full policy&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.write.full_policy|Behavior in case of buffer full when writing data to buffer. Select from overwrite, do_nothing, block.&br;''overwrite'':Overwrite the data.&br;''do_nothing'':I will not do anything.&br;''block'':I will block.&br;If block is specified, if the next timeout value is specified, it will time out if it can not be written after the specified time. The default is overwrite (overwrite). |
//|⑪&br;⑯|Buffer full policy&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.write.full_policy|バッファへのデータ書き込み時に、バッファフルだった場合の挙動。overwrite、do_nothing、block から選択します。&br;''overwrite'':データを上書きします。&br;''do_nothing'':何もしません。&br;''block'':ブロックします。&br;block を指定した場合、次の timeout 値を指定すれば、指定時間後書き込み不可能であればタイムアウトします。 デフォルトは  overwrite (上書き)です。|
|⑫&br;⑰|Buffer write timeout&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.write.timeout|Time (in seconds) to generate the timeout out event when writing data to the buffer&br;The default is 1.0 [sec]. If 0.0 is set, timeout does not occur.|
//|⑫&br;⑰|Buffer write timeout&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.write.timeout|バッファへのデータ書き込み時に、タイムアウトアウトイベントを発生させるまでの時間（単位:秒）&br;デフォルトは 1.0 [sec]です。0.0を設定した場合はタイムアウトしません。|
|⑬&br;⑱|Buffer empty policy&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.read.empty_policy|Behavior when buffer is empty when reading data from buffer. Select from readblock, do_nothing, and block.&br;''readblock'':It rereads the last element.&br;''do_nothing'':I will not do anything.&br;''block'':I will block.&br;If block is specified, if the next timeout value is specified, it will time out if it can not be read after the specified time. The default is readback.|
//|⑬&br;⑱|Buffer empty policy&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.read.empty_policy|バッファからのデータ読み出し時に、バッファが空だった場合の挙動。readblock、do_nothing、block から選択します。&br;''readblock'':最後の要素を再読み出します。&br;''do_nothing'':何もしません。&br;''block'':ブロックします。&br;block を指定した場合、次の timeout 値を指定すれば、指定時間後読み出し不可能であればタイムアウトします。 デフォルトは readbackです。|
|⑭&br;⑲|Buffer read timeout&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.read.timeout|Time (in seconds) for generating a timeout event when reading data from the buffer&br;The default is 1.0 [sec]. If 0.0 is set, timeout does not occur.|
//|⑭&br;⑲|Buffer read timeout&br;(OutPort/InPort)|&lt;&lt;properties&gt;&gt;&br;buffer.read.timeout|バッファからのデータ読み出し時に、タイムアウトイベントを発生させるための時間（単位:秒）&br;デフォルトは 1.0 [sec]です。0.0 を設定した場合はタイムアウトしません。|
|⑳&br;㉑|Name/Value|&lt;&lt;properties&gt;&gt;&br;Name|Set arbitrary properties&br;You can add items with the [Add] button and delete items with the [Delete] button.&br;The entered item is set to Properties of ConnectorProfile in NVList format.&br;Property of the same key can not be set.|
//|⑳&br;㉑|Name/Value|&lt;&lt;properties&gt;&gt;&br;Name|任意のプロパティを設定&br;[追加] ボタンで項目の追加、[削除] ボタンで項目の削除が可能です。&br;入力された項目は NVList の形式で ConnectorProfileのProperties に設定されます。&br;同一 Key の Property は設定する事はできません。|

Regarding items ② to ⑤, RT System Editor creates values that can be specified by matching character strings from the value list of each port.
If only ANY is specified for both ports, it is impossible to determine the value that can be entered.
Therefore, when ANY is included in both ports, RT System Editor allows you to enter arbitrary character strings. For items that can input arbitrary character strings, "Optional input possible" is displayed.
//②～⑤までの項目について、RT System Editor は指定可能な値を、それぞれのポートの値リストから文字列のマッチングを行って作成します。
//双方のポートに対して ANY しか指定されていないような場合には、入力可能な値を判断することができません。
//このため、双方のポートに ANY が含まれている場合に、RT System Editor は任意の文字列を入力できるようにしています。任意の文字列が入力可能な項目には、「任意入力可」と表示されます。
#br

#ref(fig58ConnectParamAny.png,100%,center)
CENTER:''Display when optional input is enabled''
//CENTER:''任意入力可のときの表示''
#br

*** (G)Service port connection
For connection between service ports, connect "ServicePort" and "ServicePort". When dragging and dropping between these, the following dialog will be displayed.
//***  サービスポート間接続
//サービスポート間の接続では、「ServicePort」と「ServicePort」を接続します。これらの間をドラッグ＆ドロップでつなぐと以下のダイアログが表示されます。
#br

#ref(fig59ServiceConnectDailog.png,100%,center)
CENTER:''Service Port Connector Profile Dialogue''
//CENTER:''サービスポートのコネクタプロファイルダイアログ''
#br

The items and conditions of the dialog are as follows.
//ダイアログの項目と条件は以下のとおりです。
#br

CENTER:''Service port connection dialog items and requirements''
//CENTER:''サービスポート接続のダイアログ項目と必要条件''
|LEFT:20|LEFT:70|LEFT:100|LEFT:300|c
| No. | Dialogue item name | ConnectorProfile | Requirement |
//|№|ダイアログ項目名|ConnectorProfile|必要条件|
| ① | Name | Name | None |
//|①|Name|Name|特になし|
|②|Details|―|If you select the check box, the detailed setting items of Consumer / Provider will be displayed.&br;It is hidden at the initial display of the dialog.|
//|②|詳細|―|チェックボックスをチェックすると、Consumer/Provider の詳細設定項目が表示されます。&br;ダイアログの初期表示時は隠れています。|
|③|Consumer|―|Select from the Consumer list of the interface set for the service port to be connected.&br;In the selection list of ComboBox, it is displayed in the form of <component name>: <interface name>: <instance name>.&br;The added Consumer / Provider pair is stored in the ConnectorProfile with the Consumer ID as the property key and the Provider ID as the property value.&br;Consumer / Provider IDs are expressed in the following format.&br;&lt;rtc_name&gt;.port.&lt;port_name&gt;.&lt;if_polality&gt;.&lt;if_tname&gt;.&lt;if_iname&gt;&br;- rtc_name is the component name&br;- port_name is the port name&br;- if_polality is "required" for Consumer, "provided" for Provider&br;- if_iname is the instance name of the interface|
//|③|Consumer|―|接続するサービスポートに設定されたインターフェースの Consumer のリストから選択します。&br;ComboBox の選択リストには<コンポーネント名>:<インターフェース名>:<インスタンス名>の形式で表示されます。&br;追加された Consumer/Provider のペアは、ConsumerのIDをプロパティのキー、Provider の ID をプロパティの値として、ConnectorProfile に格納されます。&br;なお、Consumer/Provider の ID は以下の形式で表現します。&br;&lt;rtc_name&gt;.port.&lt;port_name&gt;.&lt;if_polality&gt;.&lt;if_tname&gt;.&lt;if_iname&gt;&br;- rtc_nameはコンポーネント名&br;- port_name はポート名&br;- if_polalityは Consumer は「required」、Provider は「provided」&br;- if_tnameはインターフェースのタイプ名&br;- if_inameはインターフェースのインスタンス名|
|④|Provider|&lt;&lt;properties&gt;&gt;&br;Set using Consumer ID as key|As with Consumer, select from the list of Providers of the interface set for the service port to be connected.|
//|④|Provider|&lt;&lt;properties&gt;&gt;&br;Consumer の ID をキーとして設定|Consumerと同様、接続するサービスポートに設定されたインターフェースの Provider のリストから選択します。|
|⑤|Add|―|Add a new entry for Consumer/Provider.|
//|⑤|Add|―|Consumer/Provider の新規エントリを追加します。|
|⑥|Delete|―|Deletes the selected Consumer / Provider entry.|
//|⑥|Delete|―|選択中の Consumer/Provider のエントリを削除します。|
|⑦&br;⑧|Name/Value|&lt;&lt;properties&gt;&gt;&br;Name|Set arbitrary properties&br;You can add items with the [Add] button and delete items with the [Delete] button.&br;The entered item is set to Properties of ConnectorProfile in NVList format.&br;Property of the same key can not be set.|
//|⑦&br;⑧|Name/Value|&lt;&lt;properties&gt;&gt;&br;Name|任意のプロパティを設定&br;[追加] ボタンで項目の追加、[削除] ボタンで項目の削除が可能です。&br;入力された項目は NVList の形式で ConnectorProfile の Properties に設定されます。&br;同一 Key の Property は設定する事はできません。|

For the service port, there is no mandatory connection condition. However, if PortInterfaceProfile between ServicePorts does not perfectly match (* 1), a warning will be displayed on the connection dialog.
//サービスポートの場合、必須となる接続の条件はありません。しかし、 ServicePort 間での PortInterfaceProfile が完全にマッチング（※１）しない場合、接続ダイアログにて警告を表示します。
#br

#ref(fig60ServicePortWarningDialog.png,nolink,center)
CENTER: ''Warning display of service port connection dialog''
//CENTER:''サービスポートの接続ダイアログの警告表示''
#br

''*１''
Perfect matching here means that the "type" of the PortInterfaceProfile is the same and the "polarity" are PROVIDED and REQUIred mutually.
Also pointing to all PortInterfaceProfiles matching (PortInterfaceProfile exists on each port multiple times).
//ここでいう完全なマッチングとは、PortInterfaceProfile の「type」が同じで、「polarity」がお互いに PROVIDED と REQUIred になっていること。
//また余りなく（PortInterfaceProfile はそれぞれのポートに複数存在する）すべての PortInterfaceProfile がマッチングすることを指しています。
#br
