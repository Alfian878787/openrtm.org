// Title: Building from source
#contents

For uses who require more flexibility, or wish to alter and use the source, OpenRTM-aist-Java can be installed from source.

** Building a source distribution

OpenRTM-aist-Java provides a build environment for Eclipse.

***Dependencies

Building OpenRTM-aist-Java requires the following libraries.

-Eclipse SDK 3.3.x or greater.
-jdk1.7.0_xx or greater.

Install these dependencies according to their individual documentations. Installing them into standard locations such as /usr and /usr/local will make compiling OpenRTM-aist-Python easier.

***Download the source

Download the OpenRTM-aist-Java source from [[here>http://www.openrtm.org/pub/OpenRTM-aist/java/]].

***Extract the source code

Extract the OpenRTM-aist-Java.X.X.X.tar.gz file into a suitable location.

- For Linux:
 $ tar xvzf OpenRTM-aist-Java-X.X.X.tar.gz
- For Windows, expand it using a tool that can expand tgz.

*** Build

The diagrams in this section show Windows and Eclipse 3.4.2.

Start Eclipse and import the project into the workspace by selecting "Import" from the File menu.


#ref(eclipse_open_import_en.png,40%,center)
CENTER: ''Importing the project''

Select "Import an existing project" and click "Next."


#ref(eclipse_select_import_en.png,60%,center)
CENTER: ''Import selection window''

Select the folder with the extract files and click "Finish."


#ref(eclipse_select_project_en.png,60%,center)
CENTER: ''Project import window''

This will import the project into the current workspace.


#ref(eclipse_open_project_en.png,60%,center)
CENTER: ''Importing a project''

Right click the build.xml file in the package explorer and select "Ant build" from the "Debug" menu.


#ref(eclipse_select_ant_built_en.png,40%,center)
CENTER: ''"Ant build"''

From the displayed window, select "buildAllLinux" and click the "Debug" button.


#ref(eclipse_execute_ant_en.png,60%,center)
CENTER: ''Edit configuration window''

The build will begin.


#ref(eclipse_execution_result_en.png,80%,center)
CENTER: ''Build result''

If the console window displays the above result, the build has completed.

**Buidling from the repository

The OpenRTM-aist-Python source code is stored in a publicly-available Subversion repository. This source code can be checked out and built.


***Necessary tools
Subclipse is required to access the repository in Eclipse.
//Subclipse: Eclipse plugin (http://subclipse.tigris.org/update_1.0.x/)#br
You need ant4eclipse at the first build.
ant4eclipse: Eclipse plugin (http://ant4eclipse.sourceforge.net)#br
//[[Subversion and its Eclipse plugin>http://subclipse.tigris.org/update_1.0.x]] are necessary to access the repository from Eclipse.

In addition to this in Windows, #br
Python and PyYAML are required. [[Download page of OpenRTM-aist C++ version:/en/node/6040/]],
Please set environment variable.
Add to PATH C:\Python27 etc. #br
[[JSmooth:https://ja.osdn.net/projects/sfnet_jsmooth/]] is required. Please install and set environment variable JSMOOTH_HOME.JSMOOTH_HOME=C:\Program Files (x86)\JSmooth0.9.9-7#br

***Check out the source

The diagrams in this section show Windows and Eclipse 3.4.2.

Check out the source in Eclipse and import it into the workspace.
The Import Selection window opens in File > Import. Select [Others] > [Check out project from SVN] and click the [Next] button to open the "Check out from SVN" window.
Select "Generate new repository location" and click "Import project" Click the "Next" button. In 'Url' enter ''http://svn.openrtm.org/OpenRTM-aist-Java/trunk/'' and click the Next button.
The "Select Folder" window opens, so select "jp.go.aist.rtm.RTC" and click the "Finish" button. #br
Download the script file or batch file from the first time only ( http://svn.openrtm.org/OpenRTM-aist-Java/trunk/ ) and execute it. #br
These files Subclipse can not check out. #br
The required java source file is generated from the idl file. #br
There is an incompleteness in the current trunk, an error occurs in part of the TEST file etc. In addition, msi file is not generated on Windows.

*** Build

The diagrams in this section show Windows and Eclipse 3.4.2.

Right click the build.xml file in the package explorer and select "Ant build" from the "Debug" menu.


#ref(eclipse_select_ant_built_en.png,40%,center)
CENTER: ''"Ant build"''

From the displayed window, select "buildAllLinux" and click the "Debug" button.


#ref(eclipse_execute_ant_en.png,60%,center)
CENTER: ''Edit configuration window''

The build will begin.


#ref(eclipse_execution_result_en.png,80%,center)
CENTER: ''Build result''

If the console window displays the above result, the build has completed.
