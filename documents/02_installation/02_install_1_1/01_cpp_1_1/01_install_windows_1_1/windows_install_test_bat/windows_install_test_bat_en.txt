// Title: How to use windows_installer_test.bat?
#contents

//** windows_installer_test.batとは
(G)** What is windows_installer_test.bat

//OpenRTM-aistをインストールしているWindows環境の設定を調べるスクリプトです。OpenRTM-aist 1.1.2版のインストール環境を調べるために作成しましたが、これ以前のバージョンがインストールされている環境でも使用可能です。&br;
//スクリプトをダブルクリックで実行するだけで結果がログファイルに出力され、以下の内容を確認することができます。
(G)This is a script to check the Windows environment settings where OpenRTM-aist is installed. It was created to check the OpenRTM-aist 1.1.2 version installation environment, but it can also be used in environments where previous versions are installed. &br;
(G)The result is output to the log file just by executing the script by double-clicking, and the following contents can be confirmed.

//- OpenRTM-aistのインストール確認
//-- インストールされていれば、treeコマンドによるディレクトリ構造を別ファイルに書き出す
- (G)Confirmation of OpenRTM-aist installation
-- (G) If installed, write the directory structure by tree command to another file

//- システム環境変数の確認
- (G)Check system environment variables

//- Pathの確認
- (G)Path confirmation

//- OpenRTM-aist-Pythonとrtshellのインストール確認
//-- インストールされていれば、treeコマンドによるディレクトリ構造を別ファイルに書き出す
- (G)Confirm installation of OpenRTM-aist-Python and rtshell
-- (G)If installed, write the directory structure by tree command to another file

//- カスタムインストールリスト確認
- (G)Check custom installation list

//** ダウンロード
** (G) Download

//以下の場所からダウンロードできます。
(G)You can download from the following location.

//| ''windows_installer_test.bat'' | http://svn.openrtm.org/openrtm-msi-buildtool/trunk/openrtm_msi/test_scripts/windows_installer_test.bat |
(G)'' windows_installer_test.bat '' | http://svn.openrtm.org/openrtm-msi-buildtool/trunk/openrtm_msi/test_scripts/windows_installer_test.bat |

//** 実行
** (G)execute

//ダウンロードした windows_installer_test.bat ファイルをダブルクリックします。　実行中コマンドプロンプト画面が表示されますが、終了すれば消えますので、それまでお待ちください。
(G)Double-click the downloaded windows_installer_test.bat file. The command prompt screen will be displayed during execution, but it will disappear when it is finished.

//*** カスタム実行（Cygwin利用）
*** (G) Custom execution (using Cygwin)

//インストールされているディレクトリ構造をtreeコマンドでログファイルに書き出しています。&br;
//Cygwinのtreeコマンドがインストールされている環境ならば、スクリプト冒頭の下記設定を環境に合わせて下さい。%CYGWIN_DIR%\bin\tree.exe が存在しない場合はWindows標準のtreeコマンドを使用します。&br;
(G)The installed directory structure is written to the log file using the tree command. & br;
(G)If the Cygwin tree command is installed in the environment, adjust the following settings at the beginning of the script to the environment. If% CYGWIN_DIR% \ bin \ tree.exe does not exist, use the standard Windows tree command. &br;

//Cygwinのtreeコマンドがインストールされていると、OpenRTM-aist-Pythonとrtshellのインストールディレクトリ構造のログ　yymmdd-hhmmss_'Python directory'-dir.tree　がコンパクトになります。出力指定で何階層目までディレクトリを降りるかを指定できるからです。
//Windows標準のtreeコマンドは階層指定ができないため、OpenRTM-aist-PythonがインストールされているPythonディレクトリのトップからの構造を全てが対象になってしまいます。そのため、ログにはディレクトリ名だけを出力しています。
(G)When the Cygwin tree command is installed, the log “yymmdd-hhmmss_'Python directory'-dir.tree” of the installation directory structure of OpenRTM-aist-Python and rtshell becomes compact. This is because you can specify how many levels down the directory in the output specification.
(G)Since the standard tree command for Windows cannot specify the hierarchy, all the structures from the top of the Python directory where OpenRTM-aist-Python is installed are targeted. Therefore, only the directory name is output to the log.


 set CYGWIN_DIR=C:\Cygwin64

//** ログファイル
** (G)logfile

//実行結果は全てログファイルに出力されます。出力先は、スクリプトと同じディレクトリのlogフォルダ（無ければ自動で作成される）下です。&br;
//本スクリプトをUSBメモリ上で実行し、結果は別のPCで確認するという使い方ができます。
(G)All execution results are output to the log file. The output destination is under the log folder (created automatically if there is none) in the same directory as the script. &br;
(G)You can use this script by running it on a USB memory and checking the results on another PC.

//| ''ログファイル名'' | ''説明'' |
//|yymmdd-hhmmss.log|メインのログファイル|
//|yymmdd-hhmmss_pfile.tree|C:\Program Files\OpenRTM-aistが存在していた場合に出力されます。treeコマンドによるOpenRTM-aistディレクトリ構造を確認できます。&br; OpenRTM-aistの64bit版は既にアンインストールされている場合でも、rtc***.log 等のファイルが存在するためにディレクトリが残っている場合は、このログファイルが出力されることになります。|
//|yymmdd-hhmmss_pfile_x86.tree|C:\Program Files (x86)\OpenRTM-aistが存在していた場合に出力されます。treeコマンドによるOpenRTM-aistディレクトリ構造を確認できます。&br; OpenRTM-aistの32bit版は既にアンインストールされている場合でも、64bit版と同じ理由でこのログファイルが出力される場合があります。|
//|yymmdd-hhmmss_'Python directory'-dir.tree|OpenRTM-aist-Pythonがインストールされている場合に出力されます。treeコマンドによるOpenRTM-aist-Pythonと(G)rtshellがインストールされているPythonディレクトリ構造を確認できます。&br;インストール先がC:\Python27だった場合は、ログファイル名がyymmdd-hhmmss_Python27-dir.treeとなります。|
| (G)'' Log file name '' | '' Description '' |
| (G)yymmdd-hhmmss.log | Main log file |
| (G)yymmdd-hhmmss_pfile.tree | This is output when C: \ Program Files \ OpenRTM-aist exists. You can check the OpenRTM-aist directory structure using the tree command. & br; Even if the 64-bit version of OpenRTM-aist has already been uninstalled, this log file will be output if the directory remains because there are files such as rtc ***. log. The |
| (G)yymmdd-hhmmss_pfile_x86.tree | This is output when C: \ Program Files (x86) \ OpenRTM-aist exists. You can check the OpenRTM-aist directory structure using the tree command. & br; Even if the 32-bit version of OpenRTM-aist has already been uninstalled, this log file may be output for the same reason as the 64-bit version. |
| (G) yymmdd-hhmmss_'Python directory'-dir.tree | This is output when OpenRTM-aist-Python is installed. You can check the Python directory structure (G)where OpenRTM-aist-Python and rtshell are installed using the tree command. & br; If the installation destination is C: \ Python27, the log file name will be yymmdd-hhmmss_Python27-dir.tree. |

//** 出力内容詳細
** (G)Output details

//*** メインのログファイル
*** (G)Main log file

//**** OpenRTM-aistのインストール確認（Program Filesフォルダをチェック）
//「C:\Program Files\OpenRTM-aist」と「C:\Program Files (x86)\OpenRTM-aist」のディレクトリ存在確認をしています。OpenRTM-aistを既にアンインストールしていても、インストール後に生成されたファイル（rtc***.log等）が存在しているとディレクトリが残ってしまいます。ディレクトリが「exist!」となっていても、C++, Python, Javaの各Examplesが「not installed」の場合はこのケースが考えられます。treeファイルを確認して下さい。
**** (G)Confirmation of OpenRTM-aist installation (Check Program Files folder)
(G)The directory existence of “C: \ Program Files \ OpenRTM-aist” and “C: \ Program Files (x86) \ OpenRTM-aist” is checked. Even if OpenRTM-aist has already been uninstalled, the directory will remain if files (rtc ***. Log, etc.) generated after installation exist. Even if the directory is “exist!”, If C ++, Python, Java Examples are “not installed”, this case can be considered. Check the tree file.

//- 1.1.2版がインストールされている環境での出力例
//-- 下記の結果は32bit版のみがインストールされていることを示しています
//-- C:\Program Files (x86)\OpenRTM-aistのディレクトリ構造の保存先ファイルは、log\20160906-141617_pfile_x86.tree 
//-- 1.1.2 のバージョン番号は、RTM_ROOT の設定から取得したもの
- (G)Output example when 1.1.2 version is installed
-- (G) The result below shows that only 32bit version is installed
-- (G) The destination file of the directory structure of C: \ Program Files (x86) \ OpenRTM-aist is log \ 20160906-141617_pfile_x86.tree
-- (G)Version number 1.1.2 is obtained from RTM_ROOT setting

 *-*-*-*-*-*-* check OpenRTM-aist installed directory *-*-*-*-*-*-* 
 [[check]] "C:\Program Files\OpenRTM-aist" directory 
 --- not exist! 
 
 [[check]] "C:\Program Files (x86)\OpenRTM-aist" directory 
 --- exist! 
 --- RTM_VERSION = 1.1.2 
 
 Result ⇒ log\20160906-141617_pfile_x86.tree 
 --- C++ Examples (1.1.2) ⇒  installed 
 --- Python Examples (1.1.2) ⇒  installed 
 --- Java Examples (1.1.2) ⇒  installed 


//- 1.1.1版のみがインストールされている環境での出力例
- (G)Output example in an environment where only the 1.1.1 version is installed

 *-*-*-*-*-*-* check OpenRTM-aist installed directory *-*-*-*-*-*-* 
 [[check]] "C:\Program Files\OpenRTM-aist" directory 
 --- not exist! 
 
 [[check]] "C:\Program Files (x86)\OpenRTM-aist" directory 
 --- exist! 
 --- RTM_VERSION = 1.1 
 
 Result ⇒ log\20160906-133745_pfile_x86.tree 
 --- C++ Examples (1.1) ⇒  installed 
 --- Python Examples (1.1) ⇒  installed 
 --- Java Examples (1.1) ⇒  not installed 

//- 32bit OS環境での出力例
//-- この環境は「C:\Program Files (x86)」のパスは存在しないため、「This PC is 32bit OS.」と表示させています
- (G)Output example in 32bit OS environment
-- (G)In this environment, the path of `` C: \ Program Files (x86) '' does not exist, so `` This PC is 32bit OS. ''

 *-*-*-*-*-*-* check OpenRTM-aist installed directory *-*-*-*-*-*-* 
 [[check]] "C:\Program Files\OpenRTM-aist" directory 
 --- exist! 
 --- RTM_VERSION = 1.1.2 
 
 Result ⇒ log\20160907-104846_pfile.tree 
 --- C++ Examples (1.1.2) ⇒  installed 
 --- Python Examples (1.1.2) ⇒  installed 
 --- Java Examples (1.1.2) ⇒  installed 
 
 --- This PC is 32bit OS. 

//**** システム環境変数の確認
//- 1.1.2版がインストールされている環境での出力例
**** (G)Check system environment variables
- (G)Output example when 1.1.2 version is installed

 *-*-*-*-*-*-* check system environment variables *-*-*-*-*-*-* 
 RTM_BASE=C:\Program Files (x86)\OpenRTM-aist\\

 RTM_ROOT=C:\Program Files (x86)\OpenRTM-aist\1.1.2\\

 RTM_VC_VERSION=vc12
 RTM_JAVA_ROOT=C:\Program Files (x86)\OpenRTM-aist\1.1.2\\

 OMNI_ROOT=C:\Program Files (x86)\OpenRTM-aist\1.1.2\omniORB\4.2.1_vc12\\

 OpenCV_DIR=C:\Program Files (x86)\OpenRTM-aist\1.1.2\OpenCV2.4.11\\

 OpenRTM_DIR=C:\Program Files (x86)\OpenRTM-aist\1.1.2\cmake\\

//- 1.1.1版のみがインストールされている環境での出力例
//-- 1.1.2版で追加された環境変数は1.1.1版では設定されていないことを確認できる
- (G)Output example in an environment where only the 1.1.1 version is installed
-- (G)It can be confirmed that environment variables added in version 1.1.2 are not set in version 1.1.1

// *-*-*-*-*-*-* check system environment variables *-*-*-*-*-*-*  
// 環境変数 RTM_BASE  が定義されていません
// RTM_ROOT=C:\Program Files (x86)\OpenRTM-aist\1.1\\
*-*-*-*-*-*-* check system environment variables *-*-*-*-*-*-*
(G) Environment variable RTM_BASE is not defined
(G) RTM_ROOT = C: \ Program Files (x86) \ OpenRTM-aist\1.1\\

// 環境変数 RTM_VC_VERSION  が定義されていません
// RTM_JAVA_ROOT=C:\Program Files\OpenRTM-aist\1.1\\
(G) Environment variable RTM_VC_VERSION is not defined
(G) RTM_JAVA_ROOT = C: \ Program Files \ OpenRTM-aist\1.1\\

 OMNI_ROOT=C:\Program Files (x86)\OpenRTM-aist\1.1\omniORB\4.1.7_vc10\\

 OpenCV_DIR=C:\Program Files (x86)\OpenRTM-aist\1.1\OpenCV2.4.9\\

// 環境変数 OpenRTM_DIR  が定義されていません
(G)Environment variable OpenRTM_DIR is not defined


//**** Pathの確認
**** (G)Confirmation of Path

//- OpenRTM-aistが設定しているパスとOpenCVの設定を抜き出しています
//- 1.1.2版がインストールされている環境での出力例
- (G)The parameters set by OpenRTM-aist and OpenCV settings are extracted
- (G)Output example when 1.1.2 version is installed

 *-*-*-*-*-*-* check Path *-*-*-*-*-*-* 
 C:\Program Files (x86)\OpenRTM-aist\1.1.2\bin\vc12\ 
 C:\Program Files (x86)\OpenRTM-aist\1.1.2\omniORB\4.2.1_vc12\bin\x86_win32\ 
 C:\Program Files (x86)\OpenRTM-aist\1.1.2\OpenCV2.4.11\x86\vc12\bin\ 

//- 別途OpenCVがインストールされている環境での出力例
//-- OpenRTM-aistに先立ってOpenCVがインストールされている（Pathに追加されている）環境を確認できます
- (G)Output example when OpenCV is installed separately
-- (G)You can check the environment where OpenCV is installed (added to Path) prior to OpenRTM-aist

 *-*-*-*-*-*-* check Path *-*-*-*-*-*-*
 C:\distribution\opencv3.0.0\build\x86\vc10\bin 
 C:\Program Files (x86)\OpenRTM-aist\1.1\bin\ 
 C:\Program Files (x86)\OpenRTM-aist\1.1\omniORB\4.1.7_vc10\bin\x86_win32\ 
 C:\Program Files (x86)\OpenRTM-aist\1.1\OpenCV2.4.9\x86\vc10\bin\

//**** PythonとOpenRTM-aist-Pythonとrtshellのインストール確認
**** (G)Installation confirmation of Python, OpenRTM-aist-Python and rtshell

//- Pythonがインストールされているパスをレジストリから取得し、OpenRTM-aist-Pythonとrtshellがインストールされているかどうかを確認できます
//- Pythonの複数バージョンをインストールしている環境も対応しています
//- 1.1.2版がインストールされている環境での出力例
//-- PYTHON_DIR\omniidl.exe が存在すればOpenRTM-aist-Pythonはインストールされていると判断
//-- PYTHON_DIR\Lib\site-packages\rtshellが存在すればrtshellはインストールされていると判断
- (G)Get the path where Python is installed from the registry and check if OpenRTM-aist-Python and rtshell are installed
- (G)Environments with multiple versions of Python installed are also supported
- (G)Output example when 1.1.2 version is installed
-- (G)If PYTHON_DIR \ omniidl.exe exists, it is determined that OpenRTM-aist-Python is installed
-- (G)If PYTHON_DIR \ Lib \ site-packages \ rtshell exists, rtshell is determined to be installed

 *-*-*-*-*-*-* check Python installed directory *-*-*-*-*-*-* 
 C:\Python27\ ----OpenRTM-aist-Python installed.  
 C:\Python27\ ----rtshell installed.  
 C:\Python27_x64\ ----OpenRTM-aist-Python not installed.  
 C:\Python27_x64\ ----rtshell installed.  
 C:\Python35_x64\ ----OpenRTM-aist-Python not installed.  
 C:\Python35_x64\ ----rtshell not installed.  
 C:\Python35\ ----OpenRTM-aist-Python not installed.  
 C:\Python35\ ----rtshell not installed.  

//**** OpenRTM-aist-Pythonとrtshellのインストールディレクトリ確認
**** (G)Check the installation directory of OpenRTM-aist-Python and rtshell

//- OpenRTM-aist-PythonがインストールされているPythonディレクトリ構造を出力します。
//- 1.1.2版がインストールされている環境での出力例
//-- 上記の結果で、C:\Python27_x64\にはOpenRTM-aist-Pythonはインストールされていないが、rtshellはインストールされているとありますが、
//この環境は対象外と判断しています。
- (G)Outputs the Python directory structure where OpenRTM-aist-Python is installed.
- (G)Output example when 1.1.2 version is installed
-- (G)According to the above result, OpenRTM-aist-Python is not installed in C: \ Python27_x64 \, but rtshell is installed.
(G)This environment is not covered.

 *-*-*-*-*-*-* check OpenRTM-aist-Python installed directory *-*-*-*-*-*-* 
 Result ⇒ log\20160906-141617_Python27-dir.tree

//- OpenRTM-aist-Python 1.1.0版がインストールされている環境での出力例
//-- このバージョンはPython2.6と2.7に対応していたので、両方インストールされている場合はそれぞれのログファイルが出力されます
- (G)Output example in an environment where OpenRTM-aist-Python 1.1.0 is installed
-- (G)This version was compatible with Python 2.6 and 2.7, so if both are installed, each log file will be output

 *-*-*-*-*-*-* check OpenRTM-aist-Python installed directory *-*-*-*-*-*-* 
 Result ⇒ log\20160906-171616_Python26-dir.tree  
 Result ⇒ log\20160906-171616_Python27-dir.tree 

//**** カスタムインストールの確認
**** (G)Confirm custom installation

//- インストーラ実行時、カスタムインストールを選択された場合のインストール状況を確認できます
//- 1.1.2版以降のバージョンを対象にしているので、1.1.1版のみがインストールされている環境ではログに出力されません
//- 1.1.2版がインストールされている環境での出力例
//-- インストーラ実行時にデフォルトの標準を選択していれば、[1]から[15]までの全てのモジュールがインストールされます。
//ただし、64bit版のインストーラを実行時は、[12]はインストールされません。
//-- カスタムインストール行った場合、選択しなかったモジュールはログに出力されません
//-- カスタムインストールで選択しなかったモジュールでも、依存関係があるものはインストールされます
- (G)When installing the installer, you can check the installation status when custom installation is selected
- (G)Since version 1.1.2 or later is targeted, it will not be output to the log in the environment where only version 1.1.1 is installed.
- (G)Output example when 1.1.2 version is installed
-- (G)If you select the default standard when running the installer, all modules from [1] to [15] will be installed. However, [12] is not installed when running the 64-bit version of the installer.
-- (G)When custom installation is performed, modules not selected are not output to the log
-- (G)Modules that are not selected for custom installation will still be installed

 *-*-*-*-*-*-* check Custom installed lists *-*-*-*-*-*-* 
 [1] C++ : Runtime Environment 
 [2] C++ : Development Environment 
 [3] C++ : Examples RTC 
 [4] C++ : OpenCV RTC 
 [5] OpenCV 
 [6] Python : Examples RTC 
 [7] Java : Runtime Environment 
 [8] Java : Examples RTC 
 [9] Tools : OpenRTP 
 [10] Tools : RTSystemEditorRCP 
 [11] Tools : JRE 
 [12] OpenRTM-aist old Runtime : 1.0.0 [x86 only] 
 [13] OpenRTM-aist old Runtime : 1.1.0 
 [14] OpenRTM-aist old Runtime : 1.1.1 
 [15] IDL 


//*** treeファイル
****(G) tree file

//- treeコマンドの実行結果をそのまま保存したファイルです
//- メインのログファイルと区別しやすいように拡張子をtreeとしているだけですので、テキストエディタで内容を確認して下さい
//- 1.1.2版がインストールされている環境での出力例
- (G)A file that saves the tree command execution results
- (G)The extension is just tree so that it can be easily distinguished from the main log file. Check the contents with a text editor.
- (G)Output example when 1.1.2 version is installed

// フォルダー パスの一覧
// ボリューム シリアル番号は 9CF9-3755 です
(G) List of folder paths
(G) Volume serial number is 9CF9-3755
 C:\PROGRAM FILES (X86)\OPENRTM-AIST
 ├─1.0.0
 │  └─vc9
 │      └─bin
 │              coil.dll
   :
 └─1.1.2
     ├─bin
     │  │  cmakeconfgen.py
